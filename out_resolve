==1239== Memcheck, a memory error detector
==1239== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1239== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1239== Command: ./cminor -resolve good1.cminor
==1239== 
resolving (line 5): str resolves to param 0 (level 1)
resolving (line 10): str_create resolves to global str_create (level 0)
resolving (line 10): str resolves to local 0 (level 1)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str_create resolves to global str_create (level 0)
resolving (line 12): str resolves to local 0 (level 1)
==1239== 
==1239== HEAP SUMMARY:
==1239==     in use at exit: 27,567 bytes in 105 blocks
==1239==   total heap usage: 118 allocs, 13 frees, 30,855 bytes allocated
==1239== 
==1239== LEAK SUMMARY:
==1239==    definitely lost: 0 bytes in 0 blocks
==1239==    indirectly lost: 0 bytes in 0 blocks
==1239==      possibly lost: 0 bytes in 0 blocks
==1239==    still reachable: 27,567 bytes in 105 blocks
==1239==         suppressed: 0 bytes in 0 blocks
==1239== Reachable blocks (those to which a pointer was found) are not shown.
==1239== To see them, rerun with: --leak-check=full --show-reachable=yes
==1239== 
==1239== For counts of detected and suppressed errors, rerun with: -v
==1239== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1241== Memcheck, a memory error detector
==1241== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1241== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1241== Command: ./cminor -resolve good2.cminor
==1241== 
resolving (line 6): x resolves to local 0 (level 1)
resolving (line 6): x resolves to local 0 (level 1)
resolving (line 6): x resolves to local 0 (level 1)
resolving (line 7): x resolves to local 0 (level 1)
resolving (line 8): y resolves to local 1 (level 1)
resolving (line 9): z resolves to local 2 (level 1)
resolving (line 10): y resolves to local 1 (level 1)
resolving (line 10): z resolves to local 2 (level 1)
resolving (line 11): x resolves to local 0 (level 1)
resolving (line 11): y resolves to local 1 (level 1)
resolving (line 17): b3 resolves to local 7 (level 1)
resolving (line 17): s1 resolves to local 5 (level 1)
resolving (line 17): s2 resolves to local 6 (level 1)
resolving (line 18): b4 resolves to local 8 (level 1)
resolving (line 18): s1 resolves to local 5 (level 1)
resolving (line 18): s2 resolves to local 6 (level 1)
resolving (line 20): b1 resolves to local 3 (level 1)
resolving (line 21): b2 resolves to local 4 (level 1)
resolving (line 22): b3 resolves to local 7 (level 1)
resolving (line 23): b4 resolves to local 8 (level 1)
==1241== 
==1241== HEAP SUMMARY:
==1241==     in use at exit: 32,881 bytes in 205 blocks
==1241==   total heap usage: 234 allocs, 29 frees, 34,421 bytes allocated
==1241== 
==1241== LEAK SUMMARY:
==1241==    definitely lost: 0 bytes in 0 blocks
==1241==    indirectly lost: 0 bytes in 0 blocks
==1241==      possibly lost: 0 bytes in 0 blocks
==1241==    still reachable: 32,881 bytes in 205 blocks
==1241==         suppressed: 0 bytes in 0 blocks
==1241== Reachable blocks (those to which a pointer was found) are not shown.
==1241== To see them, rerun with: --leak-check=full --show-reachable=yes
==1241== 
==1241== For counts of detected and suppressed errors, rerun with: -v
==1241== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1242== Memcheck, a memory error detector
==1242== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1242== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1242== Command: ./cminor -resolve good3.cminor
==1242== 
resolving (line 18): x1 resolves to global x1 (level 0)
resolving (line 19): x2 resolves to global x2 (level 0)
resolving (line 20): x3 resolves to global x3 (level 0)
resolving (line 21): x4 resolves to global x4 (level 0)
resolving (line 22): x5 resolves to global x5 (level 0)
resolving (line 23): x6 resolves to global x6 (level 0)
resolving (line 25): x resolves to global x (level 0)
resolving (line 26): y resolves to global y (level 0)
resolving (line 27): z resolves to global z (level 0)
resolving (line 28): c resolves to global c (level 0)
resolving (line 31): x1 resolves to local 0 (level 1)
resolving (line 33): x3 resolves to local 2 (level 1)
resolving (line 34): x4 resolves to local 3 (level 1)
resolving (line 39): x3 resolves to local 2 (level 1)
resolving (line 39): x4 resolves to local 3 (level 1)
resolving (line 41): x1 resolves to local 0 (level 1)
resolving (line 42): x2 resolves to local 1 (level 1)
resolving (line 43): x3 resolves to local 2 (level 1)
resolving (line 44): x4 resolves to local 3 (level 1)
resolving (line 46): x resolves to local 4 (level 1)
resolving (line 47): y resolves to local 5 (level 1)
resolving (line 48): z resolves to local 6 (level 1)
resolving (line 49): c resolves to local 7 (level 1)
==1242== 
==1242== HEAP SUMMARY:
==1242==     in use at exit: 36,131 bytes in 296 blocks
==1242==   total heap usage: 315 allocs, 19 frees, 37,479 bytes allocated
==1242== 
==1242== LEAK SUMMARY:
==1242==    definitely lost: 0 bytes in 0 blocks
==1242==    indirectly lost: 0 bytes in 0 blocks
==1242==      possibly lost: 0 bytes in 0 blocks
==1242==    still reachable: 36,131 bytes in 296 blocks
==1242==         suppressed: 0 bytes in 0 blocks
==1242== Reachable blocks (those to which a pointer was found) are not shown.
==1242== To see them, rerun with: --leak-check=full --show-reachable=yes
==1242== 
==1242== For counts of detected and suppressed errors, rerun with: -v
==1242== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1243== Memcheck, a memory error detector
==1243== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1243== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1243== Command: ./cminor -resolve good4.cminor
==1243== 
resolving (line 30): f2 resolves to global f2 (level 0)
resolving (line 31): f3 resolves to global f3 (level 0)
resolving (line 32): f5 resolves to global f5 (level 0)
resolving (line 33): f4 resolves to global f4 (level 0)
==1243== 
==1243== HEAP SUMMARY:
==1243==     in use at exit: 28,272 bytes in 126 blocks
==1243==   total heap usage: 152 allocs, 26 frees, 34,860 bytes allocated
==1243== 
==1243== LEAK SUMMARY:
==1243==    definitely lost: 0 bytes in 0 blocks
==1243==    indirectly lost: 0 bytes in 0 blocks
==1243==      possibly lost: 0 bytes in 0 blocks
==1243==    still reachable: 28,272 bytes in 126 blocks
==1243==         suppressed: 0 bytes in 0 blocks
==1243== Reachable blocks (those to which a pointer was found) are not shown.
==1243== To see them, rerun with: --leak-check=full --show-reachable=yes
==1243== 
==1243== For counts of detected and suppressed errors, rerun with: -v
==1243== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1244== Memcheck, a memory error detector
==1244== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1244== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1244== Command: ./cminor -resolve good5.cminor
==1244== 
resolving (line 13): x1 resolves to local 0 (level 1)
resolving (line 13): x2 resolves to local 1 (level 1)
resolving (line 13): x3 resolves to local 2 (level 1)
resolving (line 13): x4 resolves to local 3 (level 1)
resolving (line 13): x5 resolves to local 4 (level 1)
resolving (line 13): x6 resolves to local 5 (level 1)
resolving (line 13): x7 resolves to local 6 (level 1)
resolving (line 13): x8 resolves to local 7 (level 1)
resolving (line 13): x9 resolves to local 8 (level 1)
resolving (line 14): x1 resolves to local 0 (level 1)
resolving (line 15): x2 resolves to local 1 (level 1)
resolving (line 16): x3 resolves to local 2 (level 1)
resolving (line 17): x4 resolves to local 3 (level 1)
resolving (line 18): x5 resolves to local 4 (level 1)
resolving (line 19): x6 resolves to local 5 (level 1)
resolving (line 20): x7 resolves to local 6 (level 1)
resolving (line 21): x8 resolves to local 7 (level 1)
resolving (line 22): x9 resolves to local 8 (level 1)
==1244== 
==1244== HEAP SUMMARY:
==1244==     in use at exit: 29,562 bytes in 147 blocks
==1244==   total heap usage: 168 allocs, 21 frees, 30,949 bytes allocated
==1244== 
==1244== LEAK SUMMARY:
==1244==    definitely lost: 0 bytes in 0 blocks
==1244==    indirectly lost: 0 bytes in 0 blocks
==1244==      possibly lost: 0 bytes in 0 blocks
==1244==    still reachable: 29,562 bytes in 147 blocks
==1244==         suppressed: 0 bytes in 0 blocks
==1244== Reachable blocks (those to which a pointer was found) are not shown.
==1244== To see them, rerun with: --leak-check=full --show-reachable=yes
==1244== 
==1244== For counts of detected and suppressed errors, rerun with: -v
==1244== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1245== Memcheck, a memory error detector
==1245== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1245== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1245== Command: ./cminor -resolve good6.cminor
==1245== 
resolving (line 13): x1 resolves to local 0 (level 1)
resolving (line 13): x2 resolves to local 1 (level 1)
resolving (line 13): x3 resolves to local 2 (level 1)
resolving (line 13): x4 resolves to local 3 (level 1)
resolving (line 13): x5 resolves to local 4 (level 1)
resolving (line 13): x6 resolves to local 5 (level 1)
resolving (line 13): x7 resolves to local 6 (level 1)
resolving (line 13): x8 resolves to local 7 (level 1)
resolving (line 13): x9 resolves to local 8 (level 1)
resolving (line 14): x1 resolves to local 0 (level 1)
resolving (line 15): x2 resolves to local 1 (level 1)
resolving (line 16): x3 resolves to local 2 (level 1)
resolving (line 17): x4 resolves to local 3 (level 1)
resolving (line 18): x5 resolves to local 4 (level 1)
resolving (line 19): x6 resolves to local 5 (level 1)
resolving (line 20): x7 resolves to local 6 (level 1)
resolving (line 21): x8 resolves to local 7 (level 1)
resolving (line 22): x9 resolves to local 8 (level 1)
resolving (line 23): x10 resolves to local 9 (level 1)
==1245== 
==1245== HEAP SUMMARY:
==1245==     in use at exit: 30,503 bytes in 164 blocks
==1245==   total heap usage: 187 allocs, 23 frees, 31,926 bytes allocated
==1245== 
==1245== LEAK SUMMARY:
==1245==    definitely lost: 0 bytes in 0 blocks
==1245==    indirectly lost: 0 bytes in 0 blocks
==1245==      possibly lost: 0 bytes in 0 blocks
==1245==    still reachable: 30,503 bytes in 164 blocks
==1245==         suppressed: 0 bytes in 0 blocks
==1245== Reachable blocks (those to which a pointer was found) are not shown.
==1245== To see them, rerun with: --leak-check=full --show-reachable=yes
==1245== 
==1245== For counts of detected and suppressed errors, rerun with: -v
==1245== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1246== Memcheck, a memory error detector
==1246== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1246== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1246== Command: ./cminor -resolve good7.cminor
==1246== 
==1246== 
==1246== HEAP SUMMARY:
==1246==     in use at exit: 24,886 bytes in 61 blocks
==1246==   total heap usage: 83 allocs, 22 frees, 27,302 bytes allocated
==1246== 
==1246== LEAK SUMMARY:
==1246==    definitely lost: 0 bytes in 0 blocks
==1246==    indirectly lost: 0 bytes in 0 blocks
==1246==      possibly lost: 0 bytes in 0 blocks
==1246==    still reachable: 24,886 bytes in 61 blocks
==1246==         suppressed: 0 bytes in 0 blocks
==1246== Reachable blocks (those to which a pointer was found) are not shown.
==1246== To see them, rerun with: --leak-check=full --show-reachable=yes
==1246== 
==1246== For counts of detected and suppressed errors, rerun with: -v
==1246== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1247== Memcheck, a memory error detector
==1247== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1247== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1247== Command: ./cminor -resolve good8.cminor
==1247== 
resolving (line 4): x resolves to param 0 (level 1)
resolving (line 4): y resolves to param 1 (level 1)
resolving (line 4): z resolves to param 2 (level 1)
resolving (line 17): g resolves to local 9 (level 1)
resolving (line 17): f1 resolves to local 8 (level 1)
resolving (line 17): e resolves to local 7 (level 1)
resolving (line 17): d resolves to local 6 (level 1)
resolving (line 17): a resolves to local 5 (level 1)
resolving (line 17): b resolves to local 4 (level 1)
resolving (line 17): c resolves to local 3 (level 1)
resolving (line 18): g resolves to local 9 (level 1)
resolving (line 19): g resolves to local 9 (level 1)
resolving (line 19): f1 resolves to local 8 (level 1)
resolving (line 19): e resolves to local 7 (level 1)
resolving (line 19): d resolves to local 6 (level 1)
resolving (line 19): a resolves to local 5 (level 1)
resolving (line 19): b resolves to local 4 (level 1)
resolving (line 19): c resolves to local 3 (level 1)
resolving (line 19): f resolves to global f (level 0)
resolving (line 19): x resolves to local 0 (level 1)
resolving (line 19): y resolves to local 1 (level 1)
resolving (line 19): z resolves to local 2 (level 1)
resolving (line 20): g resolves to local 9 (level 1)
==1247== 
==1247== HEAP SUMMARY:
==1247==     in use at exit: 30,589 bytes in 173 blocks
==1247==   total heap usage: 205 allocs, 32 frees, 33,176 bytes allocated
==1247== 
==1247== LEAK SUMMARY:
==1247==    definitely lost: 0 bytes in 0 blocks
==1247==    indirectly lost: 0 bytes in 0 blocks
==1247==      possibly lost: 0 bytes in 0 blocks
==1247==    still reachable: 30,589 bytes in 173 blocks
==1247==         suppressed: 0 bytes in 0 blocks
==1247== Reachable blocks (those to which a pointer was found) are not shown.
==1247== To see them, rerun with: --leak-check=full --show-reachable=yes
==1247== 
==1247== For counts of detected and suppressed errors, rerun with: -v
==1247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1249== Memcheck, a memory error detector
==1249== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1249== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1249== Command: ./cminor -resolve good9.cminor
==1249== 
resolving (line 6): i resolves to local 0 (level 1)
resolving (line 6): i resolves to local 0 (level 1)
resolving (line 6): i resolves to local 0 (level 1)
resolving (line 6): s resolves to local 1 (level 1)
resolving (line 6): i resolves to local 0 (level 1)
resolving (line 7): s resolves to local 1 (level 1)
resolving (line 7): s resolves to local 1 (level 1)
resolving (line 7): i resolves to local 0 (level 1)
resolving (line 9): s resolves to local 1 (level 1)
resolving (line 11): s resolves to local 1 (level 1)
resolving (line 12): i resolves to local 0 (level 1)
resolving (line 12): i resolves to local 0 (level 1)
resolving (line 12): i resolves to local 0 (level 1)
resolving (line 12): i resolves to local 0 (level 1)
resolving (line 13): s resolves to local 1 (level 1)
resolving (line 13): s resolves to local 1 (level 1)
resolving (line 13): i resolves to local 0 (level 1)
resolving (line 16): s resolves to local 1 (level 1)
==1249== 
==1249== HEAP SUMMARY:
==1249==     in use at exit: 28,102 bytes in 106 blocks
==1249==   total heap usage: 119 allocs, 13 frees, 31,386 bytes allocated
==1249== 
==1249== LEAK SUMMARY:
==1249==    definitely lost: 0 bytes in 0 blocks
==1249==    indirectly lost: 0 bytes in 0 blocks
==1249==      possibly lost: 0 bytes in 0 blocks
==1249==    still reachable: 28,102 bytes in 106 blocks
==1249==         suppressed: 0 bytes in 0 blocks
==1249== Reachable blocks (those to which a pointer was found) are not shown.
==1249== To see them, rerun with: --leak-check=full --show-reachable=yes
==1249== 
==1249== For counts of detected and suppressed errors, rerun with: -v
==1249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1250== Memcheck, a memory error detector
==1250== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1250== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1250== Command: ./cminor -resolve good10.cminor
==1250== 
==1250== 
==1250== HEAP SUMMARY:
==1250==     in use at exit: 26,561 bytes in 62 blocks
==1250==   total heap usage: 65 allocs, 3 frees, 27,633 bytes allocated
==1250== 
==1250== LEAK SUMMARY:
==1250==    definitely lost: 0 bytes in 0 blocks
==1250==    indirectly lost: 0 bytes in 0 blocks
==1250==      possibly lost: 0 bytes in 0 blocks
==1250==    still reachable: 26,561 bytes in 62 blocks
==1250==         suppressed: 0 bytes in 0 blocks
==1250== Reachable blocks (those to which a pointer was found) are not shown.
==1250== To see them, rerun with: --leak-check=full --show-reachable=yes
==1250== 
==1250== For counts of detected and suppressed errors, rerun with: -v
==1250== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1251== Memcheck, a memory error detector
==1251== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1251== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1251== Command: ./cminor -resolve good11.cminor
==1251== 
==1251== 
==1251== HEAP SUMMARY:
==1251==     in use at exit: 25,547 bytes in 51 blocks
==1251==   total heap usage: 60 allocs, 9 frees, 28,763 bytes allocated
==1251== 
==1251== LEAK SUMMARY:
==1251==    definitely lost: 0 bytes in 0 blocks
==1251==    indirectly lost: 0 bytes in 0 blocks
==1251==      possibly lost: 0 bytes in 0 blocks
==1251==    still reachable: 25,547 bytes in 51 blocks
==1251==         suppressed: 0 bytes in 0 blocks
==1251== Reachable blocks (those to which a pointer was found) are not shown.
==1251== To see them, rerun with: --leak-check=full --show-reachable=yes
==1251== 
==1251== For counts of detected and suppressed errors, rerun with: -v
==1251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1252== Memcheck, a memory error detector
==1252== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1252== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1252== Command: ./cminor -resolve good12.cminor
==1252== 
resolving (line 12): f resolves to global f (level 0)
resolving (line 21): f resolves to global f (level 0)
==1252== 
==1252== HEAP SUMMARY:
==1252==     in use at exit: 26,155 bytes in 67 blocks
==1252==   total heap usage: 76 allocs, 9 frees, 29,371 bytes allocated
==1252== 
==1252== LEAK SUMMARY:
==1252==    definitely lost: 0 bytes in 0 blocks
==1252==    indirectly lost: 0 bytes in 0 blocks
==1252==      possibly lost: 0 bytes in 0 blocks
==1252==    still reachable: 26,155 bytes in 67 blocks
==1252==         suppressed: 0 bytes in 0 blocks
==1252== Reachable blocks (those to which a pointer was found) are not shown.
==1252== To see them, rerun with: --leak-check=full --show-reachable=yes
==1252== 
==1252== For counts of detected and suppressed errors, rerun with: -v
==1252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1253== Memcheck, a memory error detector
==1253== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1253== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1253== Command: ./cminor -resolve good13.cminor
==1253== 
resolving (line 5): x resolves to param 0 (level 1)
resolving (line 9): x resolves to param 0 (level 1)
resolving (line 11): x52 resolves to global x52 (level 0)
resolving (line 13): x resolves to local 1 (level 2)
resolving (line 16): x resolves to local 2 (level 2)
resolving (line 16): x resolves to local 2 (level 2)
resolving (line 18): x resolves to param 0 (level 1)
resolving (line 22): x resolves to global x (level 0)
resolving (line 25): f52 resolves to global f52 (level 0)
resolving (line 25): x resolves to local 0 (level 1)
==1253== 
==1253== HEAP SUMMARY:
==1253==     in use at exit: 28,712 bytes in 128 blocks
==1253==   total heap usage: 168 allocs, 40 frees, 39,602 bytes allocated
==1253== 
==1253== LEAK SUMMARY:
==1253==    definitely lost: 0 bytes in 0 blocks
==1253==    indirectly lost: 0 bytes in 0 blocks
==1253==      possibly lost: 0 bytes in 0 blocks
==1253==    still reachable: 28,712 bytes in 128 blocks
==1253==         suppressed: 0 bytes in 0 blocks
==1253== Reachable blocks (those to which a pointer was found) are not shown.
==1253== To see them, rerun with: --leak-check=full --show-reachable=yes
==1253== 
==1253== For counts of detected and suppressed errors, rerun with: -v
==1253== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1254== Memcheck, a memory error detector
==1254== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1254== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1254== Command: ./cminor -resolve good14.cminor
==1254== 
==1254== 
==1254== HEAP SUMMARY:
==1254==     in use at exit: 31,698 bytes in 154 blocks
==1254==   total heap usage: 157 allocs, 3 frees, 32,770 bytes allocated
==1254== 
==1254== LEAK SUMMARY:
==1254==    definitely lost: 0 bytes in 0 blocks
==1254==    indirectly lost: 0 bytes in 0 blocks
==1254==      possibly lost: 0 bytes in 0 blocks
==1254==    still reachable: 31,698 bytes in 154 blocks
==1254==         suppressed: 0 bytes in 0 blocks
==1254== Reachable blocks (those to which a pointer was found) are not shown.
==1254== To see them, rerun with: --leak-check=full --show-reachable=yes
==1254== 
==1254== For counts of detected and suppressed errors, rerun with: -v
==1254== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1256== Memcheck, a memory error detector
==1256== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1256== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1256== Command: ./cminor -resolve good15.cminor
==1256== 
==1256== 
==1256== HEAP SUMMARY:
==1256==     in use at exit: 28,008 bytes in 97 blocks
==1256==   total heap usage: 100 allocs, 3 frees, 29,080 bytes allocated
==1256== 
==1256== LEAK SUMMARY:
==1256==    definitely lost: 0 bytes in 0 blocks
==1256==    indirectly lost: 0 bytes in 0 blocks
==1256==      possibly lost: 0 bytes in 0 blocks
==1256==    still reachable: 28,008 bytes in 97 blocks
==1256==         suppressed: 0 bytes in 0 blocks
==1256== Reachable blocks (those to which a pointer was found) are not shown.
==1256== To see them, rerun with: --leak-check=full --show-reachable=yes
==1256== 
==1256== For counts of detected and suppressed errors, rerun with: -v
==1256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1257== Memcheck, a memory error detector
==1257== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1257== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1257== Command: ./cminor -resolve good16.cminor
==1257== 
==1257== 
==1257== HEAP SUMMARY:
==1257==     in use at exit: 31,528 bytes in 157 blocks
==1257==   total heap usage: 160 allocs, 3 frees, 32,600 bytes allocated
==1257== 
==1257== LEAK SUMMARY:
==1257==    definitely lost: 0 bytes in 0 blocks
==1257==    indirectly lost: 0 bytes in 0 blocks
==1257==      possibly lost: 0 bytes in 0 blocks
==1257==    still reachable: 31,528 bytes in 157 blocks
==1257==         suppressed: 0 bytes in 0 blocks
==1257== Reachable blocks (those to which a pointer was found) are not shown.
==1257== To see them, rerun with: --leak-check=full --show-reachable=yes
==1257== 
==1257== For counts of detected and suppressed errors, rerun with: -v
==1257== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1258== Memcheck, a memory error detector
==1258== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1258== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1258== Command: ./cminor -resolve good17.cminor
==1258== 
resolving (line 3): x resolves to param 0 (level 1)
resolving (line 5): y resolves to param 1 (level 1)
resolving (line 7): z resolves to param 2 (level 1)
resolving (line 9): t resolves to param 3 (level 1)
resolving (line 77): x resolves to local 0 (level 1)
resolving (line 77): x resolves to local 0 (level 1)
resolving (line 78): print_func resolves to global print_func (level 0)
==1258== 
==1258== HEAP SUMMARY:
==1258==     in use at exit: 38,106 bytes in 297 blocks
==1258==   total heap usage: 313 allocs, 16 frees, 40,420 bytes allocated
==1258== 
==1258== LEAK SUMMARY:
==1258==    definitely lost: 0 bytes in 0 blocks
==1258==    indirectly lost: 0 bytes in 0 blocks
==1258==      possibly lost: 0 bytes in 0 blocks
==1258==    still reachable: 38,106 bytes in 297 blocks
==1258==         suppressed: 0 bytes in 0 blocks
==1258== Reachable blocks (those to which a pointer was found) are not shown.
==1258== To see them, rerun with: --leak-check=full --show-reachable=yes
==1258== 
==1258== For counts of detected and suppressed errors, rerun with: -v
==1258== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1259== Memcheck, a memory error detector
==1259== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1259== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1259== Command: ./cminor -resolve good18.cminor
==1259== 
resolving (line 39): a resolves to param 0 (level 1)
resolving (line 39): global_x resolves to global global_x (level 0)
resolving (line 39): d resolves to param 3 (level 1)
resolving (line 39): e resolves to param 4 (level 1)
resolving (line 40): a resolves to param 0 (level 1)
resolving (line 40): global_x resolves to global global_x (level 0)
resolving (line 41): a resolves to param 0 (level 1)
resolving (line 41): e resolves to param 4 (level 1)
resolving (line 42): a resolves to param 0 (level 1)
resolving (line 65): x resolves to param 0 (level 1)
resolving (line 67): y resolves to param 1 (level 1)
resolving (line 69): z resolves to param 2 (level 1)
resolving (line 71): t resolves to param 3 (level 1)
resolving (line 77): x resolves to param 0 (level 1)
resolving (line 77): y resolves to param 1 (level 1)
resolving (line 81): x resolves to param 0 (level 1)
resolving (line 286): sum resolves to global sum (level 0)
resolving (line 303): x resolves to local 0 (level 1)
resolving (line 303): x1 resolves to local 1 (level 1)
resolving (line 303): x2 resolves to local 2 (level 1)
resolving (line 303): x3 resolves to local 3 (level 1)
resolving (line 305): x resolves to local 0 (level 1)
resolving (line 308): x resolves to local 0 (level 1)
resolving (line 308): x resolves to local 0 (level 1)
resolving (line 309): x resolves to local 0 (level 1)
resolving (line 309): x resolves to local 0 (level 1)
resolving (line 312): x3 resolves to local 3 (level 1)
resolving (line 312): x3 resolves to local 3 (level 1)
resolving (line 313): x3 resolves to local 3 (level 1)
resolving (line 313): x3 resolves to local 3 (level 1)
resolving (line 315): x resolves to local 0 (level 1)
resolving (line 316): y resolves to local 4 (level 1)
resolving (line 317): x resolves to local 0 (level 1)
resolving (line 319): y resolves to local 4 (level 1)
resolving (line 319): x resolves to local 0 (level 1)
resolving (line 320): y resolves to local 4 (level 1)
resolving (line 321): x resolves to local 0 (level 1)
resolving (line 323): y resolves to local 4 (level 1)
resolving (line 323): x resolves to local 0 (level 1)
resolving (line 323): y resolves to local 4 (level 1)
resolving (line 323): x resolves to local 0 (level 1)
resolving (line 323): y resolves to local 4 (level 1)
resolving (line 323): x resolves to local 0 (level 1)
resolving (line 323): y resolves to local 4 (level 1)
resolving (line 323): x resolves to local 0 (level 1)
resolving (line 325): y resolves to local 4 (level 1)
resolving (line 325): x resolves to local 0 (level 1)
resolving (line 328): y resolves to local 4 (level 1)
resolving (line 328): x resolves to local 0 (level 1)
resolving (line 330): x resolves to local 0 (level 1)
resolving (line 330): x1 resolves to local 1 (level 1)
resolving (line 330): x3 resolves to local 3 (level 1)
resolving (line 330): x2 resolves to local 2 (level 1)
resolving (line 331): x resolves to local 0 (level 1)
resolving (line 331): x1 resolves to local 1 (level 1)
resolving (line 332): x2 resolves to local 2 (level 1)
resolving (line 332): x3 resolves to local 3 (level 1)
resolving (line 334): print_func resolves to global print_func (level 0)
resolving (line 335): print_func resolves to global print_func (level 0)
resolving (line 337): x resolves to local 0 (level 1)
resolving (line 339): x resolves to local 0 (level 1)
resolving (line 339): x resolves to local 0 (level 1)
resolving (line 341): x resolves to local 0 (level 1)
resolving (line 343): x resolves to local 0 (level 1)
resolving (line 343): x resolves to local 0 (level 1)
resolving (line 345): x resolves to local 0 (level 1)
resolving (line 349): param1 resolves to param 0 (level 1)
resolving (line 350): param2 resolves to param 1 (level 1)
resolving (line 351): param3 resolves to param 2 (level 1)
resolving (line 352): param4 resolves to param 3 (level 1)
resolving (line 353): param1 resolves to param 0 (level 1)
resolving (line 353): param2 resolves to param 1 (level 1)
resolving (line 354): param4 resolves to param 3 (level 1)
resolving (line 354): param3 resolves to param 2 (level 1)
resolving (line 355): print_func resolves to global print_func (level 0)
resolving (line 355): param1 resolves to param 0 (level 1)
resolving (line 355): param2 resolves to param 1 (level 1)
resolving (line 355): param4 resolves to param 3 (level 1)
resolving (line 355): param3 resolves to param 2 (level 1)
resolving (line 377): global_x resolves to global global_x (level 0)
resolving (line 378): global_x1 resolves to global global_x1 (level 0)
resolving (line 379): global_x2 resolves to global global_x2 (level 0)
resolving (line 380): global_x3 resolves to global global_x3 (level 0)
resolving (line 381): global_x4 resolves to global global_x4 (level 0)
resolving (line 382): global_x5 resolves to global global_x5 (level 0)
resolving (line 383): global_x6 resolves to global global_x6 (level 0)
resolving (line 384): global_y resolves to global global_y (level 0)
resolving (line 385): global_z resolves to global global_z (level 0)
resolving (line 386): global_t1 resolves to global global_t1 (level 0)
resolving (line 387): global_t2 resolves to global global_t2 (level 0)
resolving (line 389): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 390): global_global_uninit_char resolves to global global_global_uninit_char (level 0)
resolving (line 391): global_global_uninit_str resolves to global global_global_uninit_str (level 0)
resolving (line 392): global_global_uninit_boolean resolves to global global_global_uninit_boolean (level 0)
resolving (line 396): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 397): global_global_uninit_char resolves to global global_global_uninit_char (level 0)
resolving (line 398): global_global_uninit_str resolves to global global_global_uninit_str (level 0)
resolving (line 399): global_global_uninit_boolean resolves to global global_global_uninit_boolean (level 0)
resolving (line 401): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 402): global_global_uninit_char resolves to global global_global_uninit_char (level 0)
resolving (line 403): global_global_uninit_str resolves to global global_global_uninit_str (level 0)
resolving (line 404): global_global_uninit_boolean resolves to global global_global_uninit_boolean (level 0)
resolving (line 408): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 412): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 420): i resolves to local 5 (level 1)
resolving (line 420): i resolves to local 5 (level 1)
resolving (line 420): i resolves to local 5 (level 1)
resolving (line 421): j resolves to local 6 (level 1)
resolving (line 421): j resolves to local 6 (level 1)
resolving (line 421): i resolves to local 5 (level 1)
resolving (line 422): i resolves to local 5 (level 1)
resolving (line 425): i resolves to local 5 (level 1)
resolving (line 426): j resolves to local 6 (level 1)
resolving (line 428): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 429): global_global_uninit_int resolves to global global_global_uninit_int (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
resolving (line 437): incr resolves to global incr (level 0)
==1259== 
==1259== HEAP SUMMARY:
==1259==     in use at exit: 113,665 bytes in 1,729 blocks
==1259==   total heap usage: 1,831 allocs, 102 frees, 131,778 bytes allocated
==1259== 
==1259== LEAK SUMMARY:
==1259==    definitely lost: 0 bytes in 0 blocks
==1259==    indirectly lost: 0 bytes in 0 blocks
==1259==      possibly lost: 0 bytes in 0 blocks
==1259==    still reachable: 113,665 bytes in 1,729 blocks
==1259==         suppressed: 0 bytes in 0 blocks
==1259== Reachable blocks (those to which a pointer was found) are not shown.
==1259== To see them, rerun with: --leak-check=full --show-reachable=yes
==1259== 
==1259== For counts of detected and suppressed errors, rerun with: -v
==1259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1260== Memcheck, a memory error detector
==1260== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1260== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1260== Command: ./cminor -resolve good19.cminor
==1260== 
resolving (line 5): x resolves to param 0 (level 1)
resolving (line 8): x resolves to param 0 (level 1)
resolving (line 11): fib resolves to global fib (level 0)
resolving (line 11): x resolves to param 0 (level 1)
resolving (line 11): fib resolves to global fib (level 0)
resolving (line 11): x resolves to param 0 (level 1)
resolving (line 18): fib resolves to global fib (level 0)
resolving (line 19): fib resolves to global fib (level 0)
resolving (line 20): fib resolves to global fib (level 0)
resolving (line 21): fib resolves to global fib (level 0)
resolving (line 22): fib resolves to global fib (level 0)
resolving (line 23): fib resolves to global fib (level 0)
resolving (line 24): fib resolves to global fib (level 0)
resolving (line 25): fib resolves to global fib (level 0)
resolving (line 26): fib resolves to global fib (level 0)
resolving (line 27): fib resolves to global fib (level 0)
resolving (line 28): fib resolves to global fib (level 0)
==1260== 
==1260== HEAP SUMMARY:
==1260==     in use at exit: 30,825 bytes in 153 blocks
==1260==   total heap usage: 173 allocs, 20 frees, 37,291 bytes allocated
==1260== 
==1260== LEAK SUMMARY:
==1260==    definitely lost: 0 bytes in 0 blocks
==1260==    indirectly lost: 0 bytes in 0 blocks
==1260==      possibly lost: 0 bytes in 0 blocks
==1260==    still reachable: 30,825 bytes in 153 blocks
==1260==         suppressed: 0 bytes in 0 blocks
==1260== Reachable blocks (those to which a pointer was found) are not shown.
==1260== To see them, rerun with: --leak-check=full --show-reachable=yes
==1260== 
==1260== For counts of detected and suppressed errors, rerun with: -v
==1260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==1261== Memcheck, a memory error detector
==1261== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1261== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1261== Command: ./cminor -resolve good20.cminor
==1261== 
resolving (line 6): a resolves to param 0 (level 1)
resolving (line 6): b resolves to param 1 (level 1)
resolving (line 8): exit resolves to global exit (level 0)
resolving (line 10): a resolves to param 0 (level 1)
resolving (line 10): b resolves to param 1 (level 1)
resolving (line 11): a resolves to param 0 (level 1)
resolving (line 15): i resolves to local 1 (level 2)
resolving (line 15): a resolves to param 0 (level 1)
resolving (line 15): i resolves to local 1 (level 2)
resolving (line 15): b resolves to param 1 (level 1)
resolving (line 15): i resolves to local 1 (level 2)
resolving (line 16): s resolves to local 0 (level 2)
resolving (line 16): s resolves to local 0 (level 2)
resolving (line 16): i resolves to local 1 (level 2)
resolving (line 17): s resolves to local 0 (level 2)
resolving (line 22): sum resolves to global sum (level 0)
resolving (line 23): sum resolves to global sum (level 0)
resolving (line 24): sum resolves to global sum (level 0)
resolving (line 25): sum resolves to global sum (level 0)
==1261== 
==1261== HEAP SUMMARY:
==1261==     in use at exit: 30,141 bytes in 152 blocks
==1261==   total heap usage: 180 allocs, 28 frees, 36,748 bytes allocated
==1261== 
==1261== LEAK SUMMARY:
==1261==    definitely lost: 0 bytes in 0 blocks
==1261==    indirectly lost: 0 bytes in 0 blocks
==1261==      possibly lost: 0 bytes in 0 blocks
==1261==    still reachable: 30,141 bytes in 152 blocks
==1261==         suppressed: 0 bytes in 0 blocks
==1261== Reachable blocks (those to which a pointer was found) are not shown.
==1261== To see them, rerun with: --leak-check=full --show-reachable=yes
==1261== 
==1261== For counts of detected and suppressed errors, rerun with: -v
==1261== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
