//resolve error: the intializer of a global variable (y) should be constant!
//x:boolean = true;
//y:boolean = x;

////resolve error: x1 is not defined!
//f:function void( )= {
//	x:boolean = true;
//	y:boolean = x1;
//}

////resolve error: x has been defined as param 0 (level 1)
//f:function void(x:integer, x:char)= {
//	x:boolean = true;
//	y:boolean = x1;
//}

////resolve error: x has been defined as param 0 (level 1)
//f:function void(x:integer)= {
//	x:integer = 1;
//	y:boolean = x;
//}

////resolve error: y has been defined as local 0 (level 1)
//f:function void(x:integer)= {
//	y:integer = 1;
//	y:integer = x;
//}

////resolve error: x has been defined globally!
//x:integer = 1;
//x:char = 'c';

//type error: the type of x does not match the type of its initializer!
//x:char = 3;

////type error: the function definition of f1 is missing!
//f1:function void(x:integer);
//f:function void( )= {
//	x:boolean = true;
//	y:boolean = x;
//}

////type error: the function definition does not match function prototype
//f:function void(x:integer);
//f:function void( )= {
//	x:boolean = true;
//	y:boolean = x;
//}

////type error: x is not an array, and can not be indexed.
//f:function void( )= {
//	x:integer = 1;
//	x[3] = 5;
//}

////type error: an array index must be integer!
//f:function void( )= {
//	x:char = 'c';
//	z:integer = 2;
//	y:array [5] integer;
//	y[x] = 5;
//}

////type error: comma expr mismatch: integer, char
//a:array [] integer = {1, 23, 'c'};

////type error: comma expr mismatch: array [] integer, array [] char
//a:array[] array[] integer = {{1}, {'2', '3'}};

////type error: the array size is missing!
//a:array[] array[] integer = {{1}, {2, 3}};

////resolve error: the array size of a global array should be constant!
//x:integer = 3;
//a:array[3] array[5+x] integer = {{1}, {2, 3}};



////good, array size can only be omitted when used as function parameters
////good, the array size of a local array can be variable.
//f:function void(a:array[]integer)= {
//	x:integer = 3;
//	a1:array[3] array[5+x] integer = {{1}, {2, 3}};
//}

//good, the initializer of a local variable may not be constant
//f:function void( )= {
//	x:boolean = true;
//	y:boolean = x;
//}

////good, function prototype
//f:function void();
//f:function void( )= {
//	f:function void();
//	x:boolean = true;
//	y:boolean = x;
//	f();
//}
//f:function void();


////good example, define x in different scopes
//x:integer = 1;
//f:function void(x:integer)= {
//	y:integer = 1;
//	xy:integer = x;
//	if(x == 1) {
//		x:integer = 1;
//	}
//
//	{ x: integer; }
//}









