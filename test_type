// ***** typecheck

// ***** decl_typecheck

//type error: the intializer of a global variable (y) should be constant!
x:boolean = true;
y:boolean = x;

//type error: the type of x does not match the type of its initializer!
f:function void() = {
	a:array[3] integer;
	x:char = a[2];
	y:integer;
	z:array[5] integer = {0, -3+5-8*6, 5, y+3, y=8};
}

//type error: the type of x1 does not match the type of its initializer!
x1:char = 3;

//good
f1:function void(x:integer);
f2:function void( )= {
	x:boolean = true;
	y:boolean = x;
}

//type error: the function ff1 has multiple conflicting prototype!
//type error: the function ff1 has multiple conflicting prototype!
//type error: the function ff1 has multiple conflicting prototype!
ff1:function void(x:integer);
ff1:function void(y:integer);
ff1:function integer(y:integer);
ff1:function integer(x: char, y:integer);
ff2:function void( )= {
    ff1:function void(x:integer, y:char, z:char);
	ff2:char;	
}
 
ff1:function void(x:integer);
ff1:function void(y:integer);
ff3:function void( )= {
    ff1:function void(x:integer);
	ff3:function void();
}

//type error: the function definition of f does not match its prototype!
f3:function void(x:integer);
f3:function void()= {
	x:boolean = true;
	y:boolean = x;
}

// ***** stmt_typecheck

//type error: function returns a wrong type!
f4:function void(a:integer) = {
	return 1;
}

//type error: function returns a wrong type!
f5:function integer(a:integer) = {
	return ;
}

//good: missing return
f6:function integer(a:integer) = {
}

//type error: the expr of if_stmt must be boolean!
f7:function void(a:integer) = {
	if(a+34*7) print;
}

//good - if else
f8:function void(a:integer) = {
	if(true)
		x:integer = 3;
	else
		print 2;
}

//type error: the expr of for_stmt must be boolean!
f9:function void() = {
	x:integer;	
	for (x= 1; x + 1; x++) {
		print 1;
	}
}

//good - for
f10:function void() = {
	x:integer;	
	for (x= 1; !(x == 1); x++) {
		print 1;
	}
}

// ***** expr_typecheck
//type error: x is not an array, and can not be indexed.
//type error: the operands of the = operator mismatch!
f11:function void( )= {
	x:integer = 1;
	x[3] = "5";
}

//type error: an array index must be integer!
f12:function void( )= {
	x:char = 'c';
	z:integer = 2;
	y:array [5] integer;
	y[x] = 5;
}

//type error: ++/-- expr only applys to integer types!
f13: function void() = {
	c:char;
	x:integer = c--;
}

//type error: unary neg operator expr only applys to integer types!
f14: function void() = {
	c:char;
	x:integer = -c;
}

//good
f15: function void() = {
	c:integer;
	x:integer = -c;
}

//type error: not operator expr only applys to boolean types!
//type error: print_stmt can not print void type!
f16:function void() = {
	a:integer;
	b:boolean = !a;
	print f16, f16(), a, b;
}

//good - operator !
f17:function void() = {
	a:integer;
	b:boolean = !b;
}

//type error: the operands of binary arithmetic operator expr mismatch.
f18:function void() = {
	a:integer;
	c:char;
	b:integer = a + 5 * a / a ^ a - c;
}

//type error: the operands of binary arithmetic operator must be integers!
//type error: the operands of binary arithmetic operator must be integers!
//type error: the operands of binary arithmetic operator expr mismatch.
//type error: the operands of binary arithmetic operator expr mismatch.
f19:function void() = {
	a:char;
	c:char;
	b:integer = a + a* a / a ^ a - c;
}


//good - binary arithmetic operator
f20:function void() = {
	a:integer;
	c:integer;
	b:integer = a + a* a / a ^ a - c;
}

//type error: the operands of a comparison operator mismatch!
f21:function void() = {
	a:integer;
	c:char;
	b:boolean = a > c;
}

//type error: the operands of a comparison operator must be integers!
f22:function void() = {
	a:char;
	c:char;
	b:boolean = a > c;
}

//good - comparison
f23:function void() = {
	a:integer;
	c:integer;
	b:boolean = (a > ((c)));
}


//type error: the == operator does not apply to array and function types!
f24:function void() = {
	a:array[2] integer;
	c:array[2] integer;
	d:char;
	b:boolean = (a == ((c)));
	a!=d!=d;
	return c==d;
}



//type error: the == operator does not apply to array and function types!
a:function integer() = {}
c:function integer() = {}
f25:function void() = {
	a:function integer();
	c:function integer();
	b:boolean = (a == ((c)));
}


//type error: the != operator does not apply to array and function types!
f26:function void() = {
	a:array[] integer;
	c:array[] integer;
	b:boolean = (a != ((c)));
}

//type error: the != operator does not apply to array and function types!
f27:function void() = {
	a:function integer();
	c:function integer();
	b:boolean = (a != ((c)));
}

//type error: the operands of the && operator mismatch!
f28:function void() = {
	a:integer;
	b:boolean = a && true && false;
}

//type error: the && operator only applys to boolean types!
f29:function void() = {
	a:integer;
	b:boolean = 1 && a;
}

//good - || 
f30:function void() = {
	a:boolean;
	b:boolean = a || true || false;
}


//type error: the operands of the || operator mismatch!
f31:function void() = {
	a:integer;
	b:boolean = a || true || false;
}



//type error: the || operator only applys to boolean types!
f32:function void() = {
	a:integer;
	b:boolean = 1 || a;
}



//good - = 
f33:function void() = {
	a:array[1] array[2] char;
	b:array[23] array[3+7*6] char;
	c:array[0] array[-343] char ={{'1'}, {'2'}};
	b = a = a = c;
}

//type error (line 272): the array size must be an positive integer literal!
//type error (line 273): the array size must be an positive integer literal!
//type error (line 273): the array size must be an positive integer literal!
//type error (line 273): the initializer size of the array does not match the size of the array!
//type error (line 274): the operands of the = operator mismatch!
//type error (line 274): the operands of the = operator mismatch!
f34:function void() = {
	a:array[1] array[2] string;
	b:array[23] array[3+7*6] char;
	c:array[0] array[-343] char ={{'1'}, {'2'}};
	b = a = a = c;
}

//type error: the = operator does not apply to function types!
f35:function void() = {}
f36:function void() = {}
f37:function void() = {
	a:char;
	f35 = f36;
}


//type error (line 295): the initializer size of the array does not match the size of the array!
//type error (line 295): the initializer size of the array does not match the size of the array!
//type error (line 296): print_stmt can not print void type!
f39:function void()= {}
f38:function void(x:integer, y:char, z:string)= {}
f40:function void() = {
	a:array[2]array[3] integer = {{1, 1}, {23}};
	print a, 1, "abc", 'a', true, false, f39();
	f38(1,'c', "str");
}


//type error (line 304): the elements of an array intializer should have the same type!
//type error (line 304): the elements of an array intializer should have the same type!
//type error (line 304): the initializer size of the array does not match the size of the array!
//type error (line 304): the initializer size of the array does not match the size of the array!
//type error (line 304): the type of a1 does not match the type of its initializer!
a1:array[2]array[3] integer = {{true, 1}, {23}};



//type error: the elements of an array intializer should have the same type!
a2:array [3] integer = {1, 23, 'c'};


//type error (line 317): the elements of an array intializer should have the same type!
//type error (line 317): the initializer size of the array does not match the size of the array!
//type error (line 317): the initializer size of the array does not match the size of the array!
//type error (line 317): the initializer size of the array does not match the size of the array!
a3:array[3] array[3] integer = {{1}, {'2', '3'}};

//type error (line 325) : invalid initializer for an array (b)!
f41:function void() = {
	a:array[2]array[3] integer = {{1, 1,1}, {1,2,23}};
	b:array[2]array[3] integer = a;
	a1:integer = -(-(-12343535454654656565));
	b1:char = '\n';
	c:string = "d\0\df";
	d:boolean = true;
	e:boolean = false;
	f:boolean = d && e || !f;
}


//type error: function call does not have enough arguments!
f42:function void(a:integer, b:char, c:string) = {
}

main: function integer() = {
	a:integer = 1;
	b:char = 'c';
	f42(a, b);
	return 0;
}

//type error: the types of function call arguments do not match the types of function parameters!
f43:function void(a:integer, b:char, c:string) = {
}

main1: function integer() = {
	a:integer = 1;
	b:char = 'c';
	f43(a+3, a^2-5+7/9, b);
	return 0;
}

//type error: function call has too much arguments!
f44:function void(a:integer, b:char, c:string) = {
}

main2: function integer() = {
	a:integer = 1;
	b:char = 'c';
	f44(a, b, "abc", 1, 23);
	return 0;
}


// ***** type_typecheck

//type error (line 373): the array size must be an positive integer literal!
//type error (line 373): the initializer size of the array does not match the size of the array!
//type error (line 373): the initializer size of the array does not match the size of the array!
//type error (line 373): the initializer size of the array does not match the size of the array!
xx:integer = 3;
aa:array[3] array[5+xx] integer = {{1}, {2, 3}};

//type error (line 382): the array size must be an positive integer literal!
//type error (line 382): the initializer size of the array does not match the size of the array!
//type error (line 382): the initializer size of the array does not match the size of the array!
//type error (line 382): the initializer size of the array does not match the size of the array!
f45:function void(a:array[]integer)= {
	x:integer = 3;
	a1:array[3] array[5+x] integer = {{1}, {2, 3}};
}

//type error (line 388): the initializer size of the array does not match the size of the array!
//type error (line 388): the initializer size of the array does not match the size of the array!
//type error (line 389): the initializer size of the array does not match the size of the array!
//type error (line 389): the initializer size of the array does not match the size of the array!
aa2:array[2] array[3] integer = {{1}, {2, 3}};
aa3:array[2] array[3] integer = {{1,2,3,4}, {2, 3,3}, {1,2,3}};

//good one
aa4:array[2] array[3] integer = {{1,2,4}, {2, 3,3}};


//type error: the array size is missing!
aa5:array[] array[] integer = {{1}, {2, 3}};


//type error: the array size is missing!
f46:function void() = {
	a:array[] integer;
}

//type error (line 410): the array size must be an positive integer literal!
//type error (line 410): the initializer size of the array does not match the size of the array!
//type error (line 410): the initializer size of the array does not match the size of the array!
//type error (line 410): the initializer size of the array does not match the size of the array!
f47:function void(a:array[]integer)= {
	x:char;
	a1:array[3] array[x] integer = {{1}, {2, 3}};
}

//good, test left parenthess
d:integer;
f48:function void(a:integer) = {
	x:integer = ((d^2)+(-d)*5);
}

//good
f49:function void(a:integer) = {
}
main4: function integer() = {
	a:integer = 1;
	b:array[2] char = {'a', 'c'};
	f49(a);
	return 0;
}

//good 
aaa:function integer() = {}
caa:function integer() = {}
f50:function void() = {
	aaa:function integer();
	caa:function integer();
	b:boolean = (aaa() != ((caa())));
}

//good, the initializer of a local variable may not be constant
f51:function void( )= {
	x:boolean = true;
	y:boolean = x;
}

//good, function prototype
fff:function void();
fff:function void( )= {
	fff:function void();
	x:boolean = true;
	y:boolean = x;
	fff();
}
fff:function void();


//good example, define x in different scopes
x52:integer = 1;
f52:function void(x:integer)= {
	y:integer = 1;
	xy:integer = x52;
	if(x52 == 1) {
		x:integer = 1;
	}

	{ x52: integer; }
}

//good - && 
f53:function void() = {
	a:boolean;
	b:boolean = a && true && false;
}

b12:array[2] integer = {1, true};
