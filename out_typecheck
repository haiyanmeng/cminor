==5108== Memcheck, a memory error detector
==5108== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5108== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5108== Command: ./cminor -typecheck good1.cminor
==5108== 
resolving (line 4): d resolves to global d (level 0)
resolving (line 4): d resolves to global d (level 0)
==5108== 
==5108== HEAP SUMMARY:
==5108==     in use at exit: 24,566 bytes in 45 blocks
==5108==   total heap usage: 54 allocs, 9 frees, 25,786 bytes allocated
==5108== 
==5108== LEAK SUMMARY:
==5108==    definitely lost: 0 bytes in 0 blocks
==5108==    indirectly lost: 0 bytes in 0 blocks
==5108==      possibly lost: 0 bytes in 0 blocks
==5108==    still reachable: 24,566 bytes in 45 blocks
==5108==         suppressed: 0 bytes in 0 blocks
==5108== Reachable blocks (those to which a pointer was found) are not shown.
==5108== To see them, rerun with: --leak-check=full --show-reachable=yes
==5108== 
==5108== For counts of detected and suppressed errors, rerun with: -v
==5108== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5113== Memcheck, a memory error detector
==5113== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5113== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5113== Command: ./cminor -typecheck good2.cminor
==5113== 
resolving (line 7): f49 resolves to global f49 (level 0)
resolving (line 7): a resolves to local 0 (level 1)
==5113== 
==5113== HEAP SUMMARY:
==5113==     in use at exit: 25,018 bytes in 56 blocks
==5113==   total heap usage: 74 allocs, 18 frees, 27,528 bytes allocated
==5113== 
==5113== LEAK SUMMARY:
==5113==    definitely lost: 0 bytes in 0 blocks
==5113==    indirectly lost: 0 bytes in 0 blocks
==5113==      possibly lost: 0 bytes in 0 blocks
==5113==    still reachable: 25,018 bytes in 56 blocks
==5113==         suppressed: 0 bytes in 0 blocks
==5113== Reachable blocks (those to which a pointer was found) are not shown.
==5113== To see them, rerun with: --leak-check=full --show-reachable=yes
==5113== 
==5113== For counts of detected and suppressed errors, rerun with: -v
==5113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5114== Memcheck, a memory error detector
==5114== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5114== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5114== Command: ./cminor -typecheck good3.cminor
==5114== 
resolving (line 7): aaa resolves to local 0 (level 1)
resolving (line 7): caa resolves to local 0 (level 1)
==5114== 
==5114== HEAP SUMMARY:
==5114==     in use at exit: 25,148 bytes in 60 blocks
==5114==   total heap usage: 76 allocs, 16 frees, 28,510 bytes allocated
==5114== 
==5114== LEAK SUMMARY:
==5114==    definitely lost: 0 bytes in 0 blocks
==5114==    indirectly lost: 0 bytes in 0 blocks
==5114==      possibly lost: 0 bytes in 0 blocks
==5114==    still reachable: 25,148 bytes in 60 blocks
==5114==         suppressed: 0 bytes in 0 blocks
==5114== Reachable blocks (those to which a pointer was found) are not shown.
==5114== To see them, rerun with: --leak-check=full --show-reachable=yes
==5114== 
==5114== For counts of detected and suppressed errors, rerun with: -v
==5114== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5115== Memcheck, a memory error detector
==5115== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5115== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5115== Command: ./cminor -typecheck good4.cminor
==5115== 
resolving (line 4): x resolves to local 0 (level 1)
==5115== 
==5115== HEAP SUMMARY:
==5115==     in use at exit: 23,912 bytes in 30 blocks
==5115==   total heap usage: 38 allocs, 8 frees, 25,092 bytes allocated
==5115== 
==5115== LEAK SUMMARY:
==5115==    definitely lost: 0 bytes in 0 blocks
==5115==    indirectly lost: 0 bytes in 0 blocks
==5115==      possibly lost: 0 bytes in 0 blocks
==5115==    still reachable: 23,912 bytes in 30 blocks
==5115==         suppressed: 0 bytes in 0 blocks
==5115== Reachable blocks (those to which a pointer was found) are not shown.
==5115== To see them, rerun with: --leak-check=full --show-reachable=yes
==5115== 
==5115== For counts of detected and suppressed errors, rerun with: -v
==5115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5117== Memcheck, a memory error detector
==5117== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5117== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5117== Command: ./cminor -typecheck good5.cminor
==5117== 
resolving (line 6): x resolves to local 0 (level 1)
resolving (line 7): fff resolves to local 0 (level 1)
==5117== 
==5117== HEAP SUMMARY:
==5117==     in use at exit: 24,704 bytes in 50 blocks
==5117==   total heap usage: 62 allocs, 12 frees, 25,956 bytes allocated
==5117== 
==5117== LEAK SUMMARY:
==5117==    definitely lost: 0 bytes in 0 blocks
==5117==    indirectly lost: 0 bytes in 0 blocks
==5117==      possibly lost: 0 bytes in 0 blocks
==5117==    still reachable: 24,704 bytes in 50 blocks
==5117==         suppressed: 0 bytes in 0 blocks
==5117== Reachable blocks (those to which a pointer was found) are not shown.
==5117== To see them, rerun with: --leak-check=full --show-reachable=yes
==5117== 
==5117== For counts of detected and suppressed errors, rerun with: -v
==5117== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5118== Memcheck, a memory error detector
==5118== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5118== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5118== Command: ./cminor -typecheck good6.cminor
==5118== 
resolving (line 5): x52 resolves to global x52 (level 0)
resolving (line 6): x52 resolves to global x52 (level 0)
==5118== 
==5118== HEAP SUMMARY:
==5118==     in use at exit: 25,143 bytes in 59 blocks
==5118==   total heap usage: 83 allocs, 24 frees, 28,732 bytes allocated
==5118== 
==5118== LEAK SUMMARY:
==5118==    definitely lost: 0 bytes in 0 blocks
==5118==    indirectly lost: 0 bytes in 0 blocks
==5118==      possibly lost: 0 bytes in 0 blocks
==5118==    still reachable: 25,143 bytes in 59 blocks
==5118==         suppressed: 0 bytes in 0 blocks
==5118== Reachable blocks (those to which a pointer was found) are not shown.
==5118== To see them, rerun with: --leak-check=full --show-reachable=yes
==5118== 
==5118== For counts of detected and suppressed errors, rerun with: -v
==5118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5119== Memcheck, a memory error detector
==5119== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5119== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5119== Command: ./cminor -typecheck good7.cminor
==5119== 
resolving (line 5): a resolves to local 0 (level 1)
==5119== 
==5119== HEAP SUMMARY:
==5119==     in use at exit: 24,104 bytes in 33 blocks
==5119==   total heap usage: 42 allocs, 9 frees, 25,324 bytes allocated
==5119== 
==5119== LEAK SUMMARY:
==5119==    definitely lost: 0 bytes in 0 blocks
==5119==    indirectly lost: 0 bytes in 0 blocks
==5119==      possibly lost: 0 bytes in 0 blocks
==5119==    still reachable: 24,104 bytes in 33 blocks
==5119==         suppressed: 0 bytes in 0 blocks
==5119== Reachable blocks (those to which a pointer was found) are not shown.
==5119== To see them, rerun with: --leak-check=full --show-reachable=yes
==5119== 
==5119== For counts of detected and suppressed errors, rerun with: -v
==5119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5120== Memcheck, a memory error detector
==5120== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5120== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5120== Command: ./cminor -typecheck good8.cminor
==5120== 
==5120== 
==5120== HEAP SUMMARY:
==5120==     in use at exit: 25,035 bytes in 50 blocks
==5120==   total heap usage: 67 allocs, 17 frees, 25,811 bytes allocated
==5120== 
==5120== LEAK SUMMARY:
==5120==    definitely lost: 0 bytes in 0 blocks
==5120==    indirectly lost: 0 bytes in 0 blocks
==5120==      possibly lost: 0 bytes in 0 blocks
==5120==    still reachable: 25,035 bytes in 50 blocks
==5120==         suppressed: 0 bytes in 0 blocks
==5120== Reachable blocks (those to which a pointer was found) are not shown.
==5120== To see them, rerun with: --leak-check=full --show-reachable=yes
==5120== 
==5120== For counts of detected and suppressed errors, rerun with: -v
==5120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5121== Memcheck, a memory error detector
==5121== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5121== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5121== Command: ./cminor -typecheck good9.cminor
==5121== 
==5121== 
==5121== HEAP SUMMARY:
==5121==     in use at exit: 23,490 bytes in 21 blocks
==5121==   total heap usage: 26 allocs, 5 frees, 24,596 bytes allocated
==5121== 
==5121== LEAK SUMMARY:
==5121==    definitely lost: 0 bytes in 0 blocks
==5121==    indirectly lost: 0 bytes in 0 blocks
==5121==      possibly lost: 0 bytes in 0 blocks
==5121==    still reachable: 23,490 bytes in 21 blocks
==5121==         suppressed: 0 bytes in 0 blocks
==5121== Reachable blocks (those to which a pointer was found) are not shown.
==5121== To see them, rerun with: --leak-check=full --show-reachable=yes
==5121== 
==5121== For counts of detected and suppressed errors, rerun with: -v
==5121== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5122== Memcheck, a memory error detector
==5122== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5122== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5122== Command: ./cminor -typecheck good10.cminor
==5122== 
==5122== 
==5122== HEAP SUMMARY:
==5122==     in use at exit: 24,028 bytes in 31 blocks
==5122==   total heap usage: 42 allocs, 11 frees, 25,328 bytes allocated
==5122== 
==5122== LEAK SUMMARY:
==5122==    definitely lost: 0 bytes in 0 blocks
==5122==    indirectly lost: 0 bytes in 0 blocks
==5122==      possibly lost: 0 bytes in 0 blocks
==5122==    still reachable: 24,028 bytes in 31 blocks
==5122==         suppressed: 0 bytes in 0 blocks
==5122== Reachable blocks (those to which a pointer was found) are not shown.
==5122== To see them, rerun with: --leak-check=full --show-reachable=yes
==5122== 
==5122== For counts of detected and suppressed errors, rerun with: -v
==5122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5123== Memcheck, a memory error detector
==5123== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5123== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5123== Command: ./cminor -typecheck bad1.cminor
==5123== 
resolve error (line 11): a function prototype named f4 with a different type has been declared locally (level 1)
resolve error (line 13): x has been defined as local 1 (level 1)
resolve error (line 19): x1 is not defined!
3 name resolution errors have been found!
==5123== 
==5123== HEAP SUMMARY:
==5123==     in use at exit: 26,202 bytes in 88 blocks
==5123==   total heap usage: 112 allocs, 24 frees, 28,656 bytes allocated
==5123== 
==5123== LEAK SUMMARY:
==5123==    definitely lost: 0 bytes in 0 blocks
==5123==    indirectly lost: 0 bytes in 0 blocks
==5123==      possibly lost: 0 bytes in 0 blocks
==5123==    still reachable: 26,202 bytes in 88 blocks
==5123==         suppressed: 0 bytes in 0 blocks
==5123== Reachable blocks (those to which a pointer was found) are not shown.
==5123== To see them, rerun with: --leak-check=full --show-reachable=yes
==5123== 
==5123== For counts of detected and suppressed errors, rerun with: -v
==5123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5125== Memcheck, a memory error detector
==5125== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5125== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5125== Command: ./cminor -typecheck bad2.cminor
==5125== 
resolve error (line 4): y has been defined as local 0 (level 1)
resolving (line 4): x resolves to param 0 (level 1)
resolve error (line 9): x has been defined globally!
2 name resolution errors have been found!
==5125== 
==5125== HEAP SUMMARY:
==5125==     in use at exit: 24,450 bytes in 47 blocks
==5125==   total heap usage: 54 allocs, 7 frees, 25,590 bytes allocated
==5125== 
==5125== LEAK SUMMARY:
==5125==    definitely lost: 0 bytes in 0 blocks
==5125==    indirectly lost: 0 bytes in 0 blocks
==5125==      possibly lost: 0 bytes in 0 blocks
==5125==    still reachable: 24,450 bytes in 47 blocks
==5125==         suppressed: 0 bytes in 0 blocks
==5125== Reachable blocks (those to which a pointer was found) are not shown.
==5125== To see them, rerun with: --leak-check=full --show-reachable=yes
==5125== 
==5125== For counts of detected and suppressed errors, rerun with: -v
==5125== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5131== Memcheck, a memory error detector
==5131== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5131== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5131== Command: ./cminor -typecheck bad3.cminor
==5131== 
resolve error (line 2): x has been defined as param 0 (level 1)
resolve error (line 3): x has been defined as param 0 (level 1)
resolve error (line 4): x1 is not defined!
resolve error (line 9): x has been defined as param 0 (level 1)
resolving (line 10): x resolves to param 0 (level 1)
4 name resolution errors have been found!
==5131== 
==5131== HEAP SUMMARY:
==5131==     in use at exit: 25,065 bytes in 63 blocks
==5131==   total heap usage: 77 allocs, 14 frees, 27,345 bytes allocated
==5131== 
==5131== LEAK SUMMARY:
==5131==    definitely lost: 0 bytes in 0 blocks
==5131==    indirectly lost: 0 bytes in 0 blocks
==5131==      possibly lost: 0 bytes in 0 blocks
==5131==    still reachable: 25,065 bytes in 63 blocks
==5131==         suppressed: 0 bytes in 0 blocks
==5131== Reachable blocks (those to which a pointer was found) are not shown.
==5131== To see them, rerun with: --leak-check=full --show-reachable=yes
==5131== 
==5131== For counts of detected and suppressed errors, rerun with: -v
==5131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5132== Memcheck, a memory error detector
==5132== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5132== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5132== Command: ./cminor -typecheck bad4.cminor
==5132== 
resolving (line 5): x resolves to global x (level 0)
resolving (line 10): a resolves to local 0 (level 1)
resolving (line 12): y resolves to local 2 (level 1)
resolving (line 12): y resolves to local 2 (level 1)
resolving (line 22): x resolves to local 0 (level 1)
type error (line 5): the intializer (x) of a global variable (y) should be constant!
type error (line 10): the type (char) of x does not match the type of its initializer (a[2])!
type error (line 16): the type (char) of x1 does not match the type of its initializer (3)!
type error (line 30): the function prototype (ff1:function integer ( y: integer )) does not match another function prototype (ff1:function void ( x: integer ))!
type error (line 31): the function prototype (ff1:function integer ( x: char, y: integer )) does not match another function prototype (ff1:function void ( x: integer ))!
type error (line 33): the function prototype (ff1:function void ( x: integer, y: char, z: char )) does not match another function prototype (ff1:function void ( x: integer ))!
6 type errors have been found!
==5132== 
==5132== HEAP SUMMARY:
==5132==     in use at exit: 31,186 bytes in 225 blocks
==5132==   total heap usage: 271 allocs, 46 frees, 36,406 bytes allocated
==5132== 
==5132== LEAK SUMMARY:
==5132==    definitely lost: 0 bytes in 0 blocks
==5132==    indirectly lost: 0 bytes in 0 blocks
==5132==      possibly lost: 0 bytes in 0 blocks
==5132==    still reachable: 31,186 bytes in 225 blocks
==5132==         suppressed: 0 bytes in 0 blocks
==5132== Reachable blocks (those to which a pointer was found) are not shown.
==5132== To see them, rerun with: --leak-check=full --show-reachable=yes
==5132== 
==5132== For counts of detected and suppressed errors, rerun with: -v
==5132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5133== Memcheck, a memory error detector
==5133== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5133== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5133== Command: ./cminor -typecheck bad5.cminor
==5133== 
resolving (line 5): x resolves to local 0 (level 1)
resolving (line 26): a resolves to param 0 (level 1)
resolving (line 40): x resolves to local 0 (level 1)
resolving (line 40): x resolves to local 0 (level 1)
resolving (line 40): x resolves to local 0 (level 1)
resolving (line 48): x resolves to local 0 (level 1)
resolving (line 48): x resolves to local 0 (level 1)
resolving (line 48): x resolves to local 0 (level 1)
type error (line 2): the function prototype (f3:function void ( x: integer )) does not match the type of its definition (f3:function void ())!
type error (line 12): function (f4) returns a wrong type (integer), and should return type void!
type error (line 17): function (f5) returns a wrong type (void), and should return type integer!
type error (line 26): the expr (a+34*7) of if_stmt has wrong type (integer), and should be boolean!
type error (line 40): the expr (x+1) of for_stmt has wrong type (integer), and should be boolean!
5 type errors have been found!
==5133== 
==5133== HEAP SUMMARY:
==5133==     in use at exit: 30,021 bytes in 177 blocks
==5133==   total heap usage: 246 allocs, 69 frees, 41,796 bytes allocated
==5133== 
==5133== LEAK SUMMARY:
==5133==    definitely lost: 0 bytes in 0 blocks
==5133==    indirectly lost: 0 bytes in 0 blocks
==5133==      possibly lost: 0 bytes in 0 blocks
==5133==    still reachable: 30,021 bytes in 177 blocks
==5133==         suppressed: 0 bytes in 0 blocks
==5133== Reachable blocks (those to which a pointer was found) are not shown.
==5133== To see them, rerun with: --leak-check=full --show-reachable=yes
==5133== 
==5133== For counts of detected and suppressed errors, rerun with: -v
==5133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5135== Memcheck, a memory error detector
==5135== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5135== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5135== Command: ./cminor -typecheck bad6.cminor
==5135== 
resolving (line 6): x resolves to local 0 (level 1)
resolving (line 14): y resolves to local 2 (level 1)
resolving (line 14): x resolves to local 0 (level 1)
resolving (line 20): c resolves to local 0 (level 1)
resolving (line 26): c resolves to local 0 (level 1)
resolving (line 32): c resolves to local 0 (level 1)
resolving (line 39): a resolves to local 0 (level 1)
resolving (line 40): f16 resolves to global f16 (level 0)
resolving (line 40): f16 resolves to global f16 (level 0)
resolving (line 40): a resolves to local 0 (level 1)
resolving (line 40): b resolves to local 1 (level 1)
resolving (line 46): b resolves to local 1 (level 1)
resolving (line 53): a resolves to local 0 (level 1)
resolving (line 53): a resolves to local 0 (level 1)
resolving (line 53): a resolves to local 0 (level 1)
resolving (line 53): a resolves to local 0 (level 1)
resolving (line 53): c resolves to local 1 (level 1)
type error (line 6): x is not an array, and can not be indexed.
type error (line 6): the operands of the = operator mismatch: left operand (x[3]) type is integer, right operand ("5") type is string!
type error (line 14): the index (x) of an array (y) has wrong type (char), and should be integer!
type error (line 20): ++/-- expr only applys to integer types: the type of expr (c) is char!
type error (line 26): unary neg operator expr only applys to integer types: the type of expr (c) is char!
type error (line 39): not operator expr only applys to boolean types: the type of expr (a) is integer!
type error (line 40): print_stmt can not print function (f16)!
type error (line 40): print_stmt can not print void type (f16())!
type error (line 53): the operands of binary arithmetic operator expr (a+5*a/a^a-c)mismatch: left operand (a+5*a/a^a) type is integer, right operand (c) type is char!
9 type errors have been found!
==5135== 
==5135== HEAP SUMMARY:
==5135==     in use at exit: 31,826 bytes in 224 blocks
==5135==   total heap usage: 293 allocs, 69 frees, 41,420 bytes allocated
==5135== 
==5135== LEAK SUMMARY:
==5135==    definitely lost: 0 bytes in 0 blocks
==5135==    indirectly lost: 0 bytes in 0 blocks
==5135==      possibly lost: 0 bytes in 0 blocks
==5135==    still reachable: 31,826 bytes in 224 blocks
==5135==         suppressed: 0 bytes in 0 blocks
==5135== Reachable blocks (those to which a pointer was found) are not shown.
==5135== To see them, rerun with: --leak-check=full --show-reachable=yes
==5135== 
==5135== For counts of detected and suppressed errors, rerun with: -v
==5135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5137== Memcheck, a memory error detector
==5137== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5137== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5137== Command: ./cminor -typecheck bad7.cminor
==5137== 
resolving (line 9): a resolves to local 0 (level 1)
resolving (line 9): a resolves to local 0 (level 1)
resolving (line 9): a resolves to local 0 (level 1)
resolving (line 9): a resolves to local 0 (level 1)
resolving (line 9): a resolves to local 0 (level 1)
resolving (line 9): c resolves to local 1 (level 1)
resolving (line 17): a resolves to local 0 (level 1)
resolving (line 17): a resolves to local 0 (level 1)
resolving (line 17): a resolves to local 0 (level 1)
resolving (line 17): a resolves to local 0 (level 1)
resolving (line 17): a resolves to local 0 (level 1)
resolving (line 17): c resolves to local 1 (level 1)
resolving (line 24): a resolves to local 0 (level 1)
resolving (line 24): c resolves to local 1 (level 1)
resolving (line 31): a resolves to local 0 (level 1)
resolving (line 31): c resolves to local 1 (level 1)
resolving (line 38): a resolves to local 0 (level 1)
resolving (line 38): c resolves to local 1 (level 1)
resolving (line 47): a resolves to local 0 (level 1)
resolving (line 47): c resolves to local 1 (level 1)
resolving (line 48): a resolves to local 0 (level 1)
resolving (line 48): d resolves to local 2 (level 1)
resolving (line 48): d resolves to local 2 (level 1)
resolving (line 49): c resolves to local 1 (level 1)
resolving (line 49): d resolves to local 2 (level 1)
resolving (line 60): a resolves to local 0 (level 1)
resolving (line 60): c resolves to local 0 (level 1)
resolving (line 68): a resolves to local 0 (level 1)
resolving (line 68): c resolves to local 1 (level 1)
resolving (line 75): a resolves to local 0 (level 1)
resolving (line 75): c resolves to local 0 (level 1)
type error (line 9): the operands of binary arithmetic operator expr (a*a)must be integers: left operand (a) type is char, right operand (a) type is char!
type error (line 9): the operands of binary arithmetic operator expr (a^a)must be integers: left operand (a) type is char, right operand (a) type is char!
type error (line 9): the operands of binary arithmetic operator expr (a+a*a/a^a)mismatch: left operand (a) type is char, right operand (a*a/a^a) type is integer!
type error (line 9): the operands of binary arithmetic operator expr (a+a*a/a^a-c)mismatch: left operand (a+a*a/a^a) type is integer, right operand (c) type is char!
type error (line 24): the operands of a comparison operator expr (a>c) mismatch: left operand (a) type is integer, right operand (c) type is char!
type error (line 31): the operands of a comparison operator expr (a>c) must be integers: left operand (a) type is char, right operand (c) type is char!
type error (line 47): the == operator does not apply to array and function types: left operand (a) type is array [2] integer, right operand (((c))) type is array [2] integer!
type error (line 48): the operands of the != operator expr (a!=d) mismatch: left operand (a) type is array [2] integer, right operand (d) type is char!
type error (line 48): the operands of the != operator expr (a!=d!=d) mismatch: left operand (a!=d) type is boolean, right operand (d) type is char!
type error (line 49): the operands of the == operator expr (c==d) mismatch: left operand (c) type is array [2] integer, right operand (d) type is char!
type error (line 49): function (f24) returns a wrong type (boolean), and should return type void!
type error (line 60): the == operator does not apply to array and function types: left operand (a) type is function integer (), right operand (((c))) type is function integer ()!
type error (line 66): the array size is missing!
type error (line 67): the array size is missing!
type error (line 68): the != operator does not apply to array and function types: left operand (a) type is array [] integer, right operand (((c))) type is array [] integer!
type error (line 75): the != operator does not apply to array and function types: left operand (a) type is function integer (), right operand (((c))) type is function integer ()!
16 type errors have been found!
==5137== 
==5137== HEAP SUMMARY:
==5137==     in use at exit: 36,704 bytes in 346 blocks
==5137==   total heap usage: 449 allocs, 103 frees, 50,008 bytes allocated
==5137== 
==5137== LEAK SUMMARY:
==5137==    definitely lost: 0 bytes in 0 blocks
==5137==    indirectly lost: 0 bytes in 0 blocks
==5137==      possibly lost: 0 bytes in 0 blocks
==5137==    still reachable: 36,704 bytes in 346 blocks
==5137==         suppressed: 0 bytes in 0 blocks
==5137== Reachable blocks (those to which a pointer was found) are not shown.
==5137== To see them, rerun with: --leak-check=full --show-reachable=yes
==5137== 
==5137== For counts of detected and suppressed errors, rerun with: -v
==5137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5138== Memcheck, a memory error detector
==5138== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5138== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5138== Command: ./cminor -typecheck bad8.cminor
==5138== 
resolving (line 4): a resolves to local 0 (level 1)
resolving (line 10): a resolves to local 0 (level 1)
resolving (line 16): a resolves to local 0 (level 1)
resolving (line 23): a resolves to local 0 (level 1)
resolving (line 31): a resolves to local 0 (level 1)
resolving (line 41): b resolves to local 1 (level 1)
resolving (line 41): a resolves to local 0 (level 1)
resolving (line 41): a resolves to local 0 (level 1)
resolving (line 41): c resolves to local 2 (level 1)
resolving (line 54): b resolves to local 1 (level 1)
resolving (line 54): a resolves to local 0 (level 1)
resolving (line 54): a resolves to local 0 (level 1)
resolving (line 54): c resolves to local 2 (level 1)
resolving (line 62): f35 resolves to global f35 (level 0)
resolving (line 62): f36 resolves to global f36 (level 0)
resolving (line 73): a resolves to local 0 (level 1)
resolving (line 73): f39 resolves to global f39 (level 0)
resolving (line 74): f38 resolves to global f38 (level 0)
type error (line 4): the operands of the && operator mismatch: left operand (a) type is integer, right operand (true) type is boolean!
type error (line 10): the && operator only applys to boolean types: left operand (1) type is integer, right operand (a) type is integer!
type error (line 23): the operands of the || operator mismatch: left operand (a) type is integer, right operand (true) type is boolean!
type error (line 31): the || operator only applys to boolean types: left operand (1) type is integer, right operand (a) type is integer!
type error (line 39): the array size (3+7*6) must be an positive integer literal!
type error (line 40): the array size (0) must be an positive integer literal!
type error (line 40): the array size (-343) must be an positive integer literal!
type error (line 40) : the type (array [0] array [-343] char) of an array (c) does not match the type of its initializer ({{'1'},{'2'}})!
type error (line 40): the type (array [0] array [-343] char) of c does not match the type of its initializer ({{'1'},{'2'}})!
type error (line 41): the operands of the = operator mismatch: left operand (a) type is array [1] array [2] char, right operand (c) type is array [0] array [-343] char!
type error (line 41): the operands of the = operator mismatch: left operand (a) type is array [1] array [2] char, right operand (a=c) type is array [0] array [-343] char!
type error (line 41): the operands of the = operator mismatch: left operand (b) type is array [23] array [3+7*6] char, right operand (a=a=c) type is array [0] array [-343] char!
type error (line 52): the array size (3+7*6) must be an positive integer literal!
type error (line 53): the array size (0) must be an positive integer literal!
type error (line 53): the array size (-343) must be an positive integer literal!
type error (line 53) : the type (array [0] array [-343] char) of an array (c) does not match the type of its initializer ({{'1'},{'2'}})!
type error (line 53): the type (array [0] array [-343] char) of c does not match the type of its initializer ({{'1'},{'2'}})!
type error (line 54): the operands of the = operator mismatch: left operand (a) type is array [1] array [2] string, right operand (c) type is array [0] array [-343] char!
type error (line 54): the operands of the = operator mismatch: left operand (a) type is array [1] array [2] string, right operand (a=c) type is array [0] array [-343] char!
type error (line 54): the operands of the = operator mismatch: left operand (b) type is array [23] array [3+7*6] char, right operand (a=a=c) type is array [0] array [-343] char!
type error (line 62): the = operator does not apply to function types!
type error (line 72): the elements of an array intializer ({{1,1},{23}}) should have the same type: ({1,1}) type is array [2] integer, ({23}) type is array [1] integer!
type error (line 72) : the type (array [2] array [3] integer) of an array (a) does not match the type of its initializer ({{1,1},{23}})!
type error (line 72): the type (array [2] array [3] integer) of a does not match the type of its initializer ({{1,1},{23}})!
type error (line 73): print_stmt can not print void type (f39())!
type error (line 83): the elements of an array intializer ({true,1}) should have the same type: (true) type is boolean, (1) type is integer!
type error (line 83): the elements of an array intializer ({{true,1},{23}}) should have the same type: ({true,1}) type is array [2] boolean, ({23}) type is array [1] integer!
type error (line 83) : the type (array [2] array [3] integer) of an array (a1) does not match the type of its initializer ({{true,1},{23}})!
type error (line 83): the type (array [2] array [3] integer) of a1 does not match the type of its initializer ({{true,1},{23}})!
29 type errors have been found!
==5138== 
==5138== HEAP SUMMARY:
==5138==     in use at exit: 39,194 bytes in 381 blocks
==5138==   total heap usage: 521 allocs, 140 frees, 56,492 bytes allocated
==5138== 
==5138== LEAK SUMMARY:
==5138==    definitely lost: 0 bytes in 0 blocks
==5138==    indirectly lost: 0 bytes in 0 blocks
==5138==      possibly lost: 0 bytes in 0 blocks
==5138==    still reachable: 39,194 bytes in 381 blocks
==5138==         suppressed: 0 bytes in 0 blocks
==5138== Reachable blocks (those to which a pointer was found) are not shown.
==5138== To see them, rerun with: --leak-check=full --show-reachable=yes
==5138== 
==5138== For counts of detected and suppressed errors, rerun with: -v
==5138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5139== Memcheck, a memory error detector
==5139== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5139== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5139== Command: ./cminor -typecheck bad9.cminor
==5139== 
resolving (line 15): a resolves to local 0 (level 1)
resolving (line 21): d resolves to local 5 (level 1)
resolving (line 21): e resolves to local 6 (level 1)
resolving (line 21): f resolves to local 7 (level 1)
resolving (line 32): f42 resolves to global f42 (level 0)
resolving (line 32): a resolves to local 0 (level 1)
resolving (line 32): b resolves to local 1 (level 1)
resolving (line 43): f43 resolves to global f43 (level 0)
resolving (line 43): a resolves to local 0 (level 1)
resolving (line 43): a resolves to local 0 (level 1)
resolving (line 43): b resolves to local 1 (level 1)
resolving (line 54): f44 resolves to global f44 (level 0)
resolving (line 54): a resolves to local 0 (level 1)
resolving (line 54): b resolves to local 1 (level 1)
type error (line 3): the elements of an array intializer ({1,23,'c'}) should have the same type: (1,23) type is integer, ('c') type is char!
type error (line 10): the elements of an array intializer ({{1},{'2','3'}}) should have the same type: ({1}) type is array [1] integer, ({'2','3'}) type is array [2] char!
type error (line 10) : the type (array [3] array [3] integer) of an array (a3) does not match the type of its initializer ({{1},{'2','3'}})!
type error (line 10): the type (array [3] array [3] integer) of a3 does not match the type of its initializer ({{1},{'2','3'}})!
type error (line 32): function call (f42(a,b)) does not have enough arguments, the correct function type is: function void ( a: integer, b: char, c: string )!
type error (line 43): the types of function call arguments (f43(a+3,a^2-5+7/9,b)) do not match the types of function parameters: function void ( a: integer, b: char, c: string )!
type error (line 54): function call (f44(a,b,"abc",1,23)) has too much arguments, the correct function type is: function void ( a: integer, b: char, c: string )!
7 type errors have been found!
==5139== 
==5139== HEAP SUMMARY:
==5139==     in use at exit: 36,062 bytes in 313 blocks
==5139==   total heap usage: 426 allocs, 113 frees, 46,358 bytes allocated
==5139== 
==5139== LEAK SUMMARY:
==5139==    definitely lost: 0 bytes in 0 blocks
==5139==    indirectly lost: 0 bytes in 0 blocks
==5139==      possibly lost: 0 bytes in 0 blocks
==5139==    still reachable: 36,062 bytes in 313 blocks
==5139==         suppressed: 0 bytes in 0 blocks
==5139== Reachable blocks (those to which a pointer was found) are not shown.
==5139== To see them, rerun with: --leak-check=full --show-reachable=yes
==5139== 
==5139== For counts of detected and suppressed errors, rerun with: -v
==5139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
==5142== Memcheck, a memory error detector
==5142== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5142== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5142== Command: ./cminor -typecheck bad10.cminor
==5142== 
resolving (line 8): xx resolves to global xx (level 0)
resolving (line 16): x resolves to local 0 (level 1)
resolving (line 45): x resolves to local 0 (level 1)
resolving (line 51): d resolves to global d (level 0)
resolving (line 51): d resolves to global d (level 0)
resolving (line 60): f49 resolves to global f49 (level 0)
resolving (line 60): a resolves to local 0 (level 1)
resolving (line 70): aaa resolves to local 0 (level 1)
resolving (line 70): caa resolves to local 0 (level 1)
resolving (line 76): x resolves to local 0 (level 1)
resolving (line 84): x resolves to local 0 (level 1)
resolving (line 85): fff resolves to local 0 (level 1)
resolving (line 94): x52 resolves to global x52 (level 0)
resolving (line 95): x52 resolves to global x52 (level 0)
resolving (line 105): a resolves to local 0 (level 1)
type error (line 8): the array size (5+xx) must be an positive integer literal!
type error (line 8): the elements of an array intializer ({{1},{2,3}}) should have the same type: ({1}) type is array [1] integer, ({2,3}) type is array [2] integer!
type error (line 8) : the type (array [3] array [5+xx] integer) of an array (aa) does not match the type of its initializer ({{1},{2,3}})!
type error (line 8): the type (array [3] array [5+xx] integer) of aa does not match the type of its initializer ({{1},{2,3}})!
type error (line 16): the array size (5+x) must be an positive integer literal!
type error (line 16): the elements of an array intializer ({{1},{2,3}}) should have the same type: ({1}) type is array [1] integer, ({2,3}) type is array [2] integer!
type error (line 16) : the type (array [3] array [5+x] integer) of an array (a1) does not match the type of its initializer ({{1},{2,3}})!
type error (line 16): the type (array [3] array [5+x] integer) of a1 does not match the type of its initializer ({{1},{2,3}})!
type error (line 23): the elements of an array intializer ({{1},{2,3}}) should have the same type: ({1}) type is array [1] integer, ({2,3}) type is array [2] integer!
type error (line 23) : the type (array [2] array [3] integer) of an array (aa2) does not match the type of its initializer ({{1},{2,3}})!
type error (line 23): the type (array [2] array [3] integer) of aa2 does not match the type of its initializer ({{1},{2,3}})!
type error (line 24): the elements of an array intializer ({{1,2,3,4},{2,3,3}}) should have the same type: ({1,2,3,4}) type is array [4] integer, ({2,3,3}) type is array [3] integer!
type error (line 24): the elements of an array intializer ({{1,2,3,4},{2,3,3},{1,2,3}}) should have the same type: ({1,2,3,4},{2,3,3}) type is array [4] integer, ({1,2,3}) type is array [3] integer!
type error (line 24) : the type (array [2] array [3] integer) of an array (aa3) does not match the type of its initializer ({{1,2,3,4},{2,3,3},{1,2,3}})!
type error (line 24): the type (array [2] array [3] integer) of aa3 does not match the type of its initializer ({{1,2,3,4},{2,3,3},{1,2,3}})!
type error (line 31): the array size is missing!
type error (line 31): the array size is missing!
type error (line 31): the elements of an array intializer ({{1},{2,3}}) should have the same type: ({1}) type is array [1] integer, ({2,3}) type is array [2] integer!
type error (line 31) : the type (array [] array [] integer) of an array (aa5) does not match the type of its initializer ({{1},{2,3}})!
type error (line 31): the type (array [] array [] integer) of aa5 does not match the type of its initializer ({{1},{2,3}})!
type error (line 36): the array size is missing!
type error (line 45): the array size (x) must be an positive integer literal!
type error (line 45): the elements of an array intializer ({{1},{2,3}}) should have the same type: ({1}) type is array [1] integer, ({2,3}) type is array [2] integer!
type error (line 45) : the type (array [3] array [x] integer) of an array (a1) does not match the type of its initializer ({{1},{2,3}})!
type error (line 45): the type (array [3] array [x] integer) of a1 does not match the type of its initializer ({{1},{2,3}})!
type error (line 108): the elements of an array intializer ({1,true}) should have the same type: (1) type is integer, (true) type is boolean!
26 type errors have been found!
==5142== 
==5142== HEAP SUMMARY:
==5142==     in use at exit: 44,386 bytes in 499 blocks
==5142==   total heap usage: 699 allocs, 200 frees, 65,967 bytes allocated
==5142== 
==5142== LEAK SUMMARY:
==5142==    definitely lost: 0 bytes in 0 blocks
==5142==    indirectly lost: 0 bytes in 0 blocks
==5142==      possibly lost: 0 bytes in 0 blocks
==5142==    still reachable: 44,386 bytes in 499 blocks
==5142==         suppressed: 0 bytes in 0 blocks
==5142== Reachable blocks (those to which a pointer was found) are not shown.
==5142== To see them, rerun with: --leak-check=full --show-reachable=yes
==5142== 
==5142== For counts of detected and suppressed errors, rerun with: -v
==5142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  1
