//good, test left parenthess
d:integer;
f48:function void(a:integer) = {
	x:integer = ((d^2)+(-d)*5);
}

//good
f49:function void(a:integer) = {
}
main4: function integer() = {
	a:integer = 1;
	b:array[2] char = {'a', 'c'};
	f49(a);
	return 0;
}

//good 
aaa:function integer() = {}
caa:function integer() = {}
f50:function void() = {
	aaa:function integer();
	caa:function integer();
	b:boolean = (aaa() != ((caa())));
}

//good, the initializer of a local variable may not be constant
f51:function void( )= {
	x:boolean = true;
	y:boolean = x;
}

//good, function prototype
fff:function void();
fff:function void( )= {
	fff:function void();
	x:boolean = true;
	y:boolean = x;
	fff();
}
fff:function void();


//good example, define x in different scopes
x52:integer = 1;
f52:function void(x:integer)= {
	y:integer = 1;
	xy:integer = x52;
	if(x52 == 1) {
		x:integer = 1;
	}

	{ x52: integer; }
}

//good - && 
f53:function void() = {
	a:boolean;
	b:boolean = a && true && false;
}
