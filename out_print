==4989== Memcheck, a memory error detector
==4989== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4989== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4989== Command: ./cminor -print good1.cminor
==4989== 
d: integer;
f48: function void ( a: integer ) =
{
    x: integer = ((d^2)+(-d)*5);
}
==4989== 
==4989== HEAP SUMMARY:
==4989==     in use at exit: 23,296 bytes in 34 blocks
==4989==   total heap usage: 35 allocs, 1 frees, 23,301 bytes allocated
==4989== 
==4989== LEAK SUMMARY:
==4989==    definitely lost: 0 bytes in 0 blocks
==4989==    indirectly lost: 0 bytes in 0 blocks
==4989==      possibly lost: 0 bytes in 0 blocks
==4989==    still reachable: 23,296 bytes in 34 blocks
==4989==         suppressed: 0 bytes in 0 blocks
==4989== Reachable blocks (those to which a pointer was found) are not shown.
==4989== To see them, rerun with: --leak-check=full --show-reachable=yes
==4989== 
==4989== For counts of detected and suppressed errors, rerun with: -v
==4989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4990== Memcheck, a memory error detector
==4990== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4990== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4990== Command: ./cminor -print good2.cminor
==4990== 
f49: function void ( a: integer ) =
{
}
main4: function integer () =
{
    a: integer = 1;
    b: array [2] char = {'a','c'};
    f49(a);
    return 0;
}
==4990== 
==4990== HEAP SUMMARY:
==4990==     in use at exit: 23,712 bytes in 44 blocks
==4990==   total heap usage: 48 allocs, 4 frees, 23,732 bytes allocated
==4990== 
==4990== LEAK SUMMARY:
==4990==    definitely lost: 0 bytes in 0 blocks
==4990==    indirectly lost: 0 bytes in 0 blocks
==4990==      possibly lost: 0 bytes in 0 blocks
==4990==    still reachable: 23,712 bytes in 44 blocks
==4990==         suppressed: 0 bytes in 0 blocks
==4990== Reachable blocks (those to which a pointer was found) are not shown.
==4990== To see them, rerun with: --leak-check=full --show-reachable=yes
==4990== 
==4990== For counts of detected and suppressed errors, rerun with: -v
==4990== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4992== Memcheck, a memory error detector
==4992== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4992== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4992== Command: ./cminor -print good3.cminor
==4992== 
aaa: function integer () =
{
}
caa: function integer () =
{
}
f50: function void () =
{
    aaa: function integer ();
    caa: function integer ();
    b: boolean = (aaa()!=((caa())));
}
==4992== 
==4992== HEAP SUMMARY:
==4992==     in use at exit: 23,776 bytes in 45 blocks
==4992==   total heap usage: 48 allocs, 3 frees, 23,791 bytes allocated
==4992== 
==4992== LEAK SUMMARY:
==4992==    definitely lost: 0 bytes in 0 blocks
==4992==    indirectly lost: 0 bytes in 0 blocks
==4992==      possibly lost: 0 bytes in 0 blocks
==4992==    still reachable: 23,776 bytes in 45 blocks
==4992==         suppressed: 0 bytes in 0 blocks
==4992== Reachable blocks (those to which a pointer was found) are not shown.
==4992== To see them, rerun with: --leak-check=full --show-reachable=yes
==4992== 
==4992== For counts of detected and suppressed errors, rerun with: -v
==4992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4993== Memcheck, a memory error detector
==4993== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4993== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4993== Command: ./cminor -print good4.cminor
==4993== 
f51: function void () =
{
    x: boolean = true;
    y: boolean = x;
}
==4993== 
==4993== HEAP SUMMARY:
==4993==     in use at exit: 22,708 bytes in 22 blocks
==4993==   total heap usage: 24 allocs, 2 frees, 22,718 bytes allocated
==4993== 
==4993== LEAK SUMMARY:
==4993==    definitely lost: 0 bytes in 0 blocks
==4993==    indirectly lost: 0 bytes in 0 blocks
==4993==      possibly lost: 0 bytes in 0 blocks
==4993==    still reachable: 22,708 bytes in 22 blocks
==4993==         suppressed: 0 bytes in 0 blocks
==4993== Reachable blocks (those to which a pointer was found) are not shown.
==4993== To see them, rerun with: --leak-check=full --show-reachable=yes
==4993== 
==4993== For counts of detected and suppressed errors, rerun with: -v
==4993== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4995== Memcheck, a memory error detector
==4995== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4995== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4995== Command: ./cminor -print good5.cminor
==4995== 
fff: function void ();
fff: function void () =
{
    fff: function void ();
    x: boolean = true;
    y: boolean = x;
    fff();
}
fff: function void ();
==4995== 
==4995== HEAP SUMMARY:
==4995==     in use at exit: 23,404 bytes in 39 blocks
==4995==   total heap usage: 43 allocs, 4 frees, 23,424 bytes allocated
==4995== 
==4995== LEAK SUMMARY:
==4995==    definitely lost: 0 bytes in 0 blocks
==4995==    indirectly lost: 0 bytes in 0 blocks
==4995==      possibly lost: 0 bytes in 0 blocks
==4995==    still reachable: 23,404 bytes in 39 blocks
==4995==         suppressed: 0 bytes in 0 blocks
==4995== Reachable blocks (those to which a pointer was found) are not shown.
==4995== To see them, rerun with: --leak-check=full --show-reachable=yes
==4995== 
==4995== For counts of detected and suppressed errors, rerun with: -v
==4995== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4996== Memcheck, a memory error detector
==4996== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4996== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4996== Command: ./cminor -print good6.cminor
==4996== 
x52: integer = 1;
f52: function void ( x: integer ) =
{
    y: integer = 1;
    xy: integer = x52;
    if(x52==1) {
        x: integer = 1;
    } 
    {
        x52: integer;
    }
}
==4996== 
==4996== HEAP SUMMARY:
==4996==     in use at exit: 23,775 bytes in 45 blocks
==4996==   total heap usage: 53 allocs, 8 frees, 23,823 bytes allocated
==4996== 
==4996== LEAK SUMMARY:
==4996==    definitely lost: 0 bytes in 0 blocks
==4996==    indirectly lost: 0 bytes in 0 blocks
==4996==      possibly lost: 0 bytes in 0 blocks
==4996==    still reachable: 23,775 bytes in 45 blocks
==4996==         suppressed: 0 bytes in 0 blocks
==4996== Reachable blocks (those to which a pointer was found) are not shown.
==4996== To see them, rerun with: --leak-check=full --show-reachable=yes
==4996== 
==4996== For counts of detected and suppressed errors, rerun with: -v
==4996== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4997== Memcheck, a memory error detector
==4997== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4997== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4997== Command: ./cminor -print good7.cminor
==4997== 
f53: function void () =
{
    a: boolean;
    b: boolean = a&&true&&false;
}
==4997== 
==4997== HEAP SUMMARY:
==4997==     in use at exit: 22,900 bytes in 25 blocks
==4997==   total heap usage: 27 allocs, 2 frees, 22,910 bytes allocated
==4997== 
==4997== LEAK SUMMARY:
==4997==    definitely lost: 0 bytes in 0 blocks
==4997==    indirectly lost: 0 bytes in 0 blocks
==4997==      possibly lost: 0 bytes in 0 blocks
==4997==    still reachable: 22,900 bytes in 25 blocks
==4997==         suppressed: 0 bytes in 0 blocks
==4997== Reachable blocks (those to which a pointer was found) are not shown.
==4997== To see them, rerun with: --leak-check=full --show-reachable=yes
==4997== 
==4997== For counts of detected and suppressed errors, rerun with: -v
==4997== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4998== Memcheck, a memory error detector
==4998== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4998== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4998== Command: ./cminor -print good8.cminor
==4998== 
aa4: array [2] array [3] integer = {{1,2,4},{2,3,3}};
a: array [3] char = {'a','b','\\'};
==4998== 
==4998== HEAP SUMMARY:
==4998==     in use at exit: 23,829 bytes in 41 blocks
==4998==   total heap usage: 41 allocs, 0 frees, 23,829 bytes allocated
==4998== 
==4998== LEAK SUMMARY:
==4998==    definitely lost: 0 bytes in 0 blocks
==4998==    indirectly lost: 0 bytes in 0 blocks
==4998==      possibly lost: 0 bytes in 0 blocks
==4998==    still reachable: 23,829 bytes in 41 blocks
==4998==         suppressed: 0 bytes in 0 blocks
==4998== Reachable blocks (those to which a pointer was found) are not shown.
==4998== To see them, rerun with: --leak-check=full --show-reachable=yes
==4998== 
==4998== For counts of detected and suppressed errors, rerun with: -v
==4998== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==4999== Memcheck, a memory error detector
==4999== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4999== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4999== Command: ./cminor -print good9.cminor
==4999== 
f6: function integer ( a: integer ) =
{
}
==4999== 
==4999== HEAP SUMMARY:
==4999==     in use at exit: 22,319 bytes in 14 blocks
==4999==   total heap usage: 14 allocs, 0 frees, 22,319 bytes allocated
==4999== 
==4999== LEAK SUMMARY:
==4999==    definitely lost: 0 bytes in 0 blocks
==4999==    indirectly lost: 0 bytes in 0 blocks
==4999==      possibly lost: 0 bytes in 0 blocks
==4999==    still reachable: 22,319 bytes in 14 blocks
==4999==         suppressed: 0 bytes in 0 blocks
==4999== Reachable blocks (those to which a pointer was found) are not shown.
==4999== To see them, rerun with: --leak-check=full --show-reachable=yes
==4999== 
==4999== For counts of detected and suppressed errors, rerun with: -v
==4999== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5000== Memcheck, a memory error detector
==5000== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5000== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5000== Command: ./cminor -print good10.cminor
==5000== 
f8: function void ( a: integer ) =
{
    if(true)
        x: integer = 3;
    else
        print 2;
}
==5000== 
==5000== HEAP SUMMARY:
==5000==     in use at exit: 22,825 bytes in 23 blocks
==5000==   total heap usage: 27 allocs, 4 frees, 22,853 bytes allocated
==5000== 
==5000== LEAK SUMMARY:
==5000==    definitely lost: 0 bytes in 0 blocks
==5000==    indirectly lost: 0 bytes in 0 blocks
==5000==      possibly lost: 0 bytes in 0 blocks
==5000==    still reachable: 22,825 bytes in 23 blocks
==5000==         suppressed: 0 bytes in 0 blocks
==5000== Reachable blocks (those to which a pointer was found) are not shown.
==5000== To see them, rerun with: --leak-check=full --show-reachable=yes
==5000== 
==5000== For counts of detected and suppressed errors, rerun with: -v
==5000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5002== Memcheck, a memory error detector
==5002== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5002== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5002== Command: ./cminor -print bad1.cminor
==5002== 
f: function void ();
f: function void () =
{
    f1: function void ();
    f2: function void ();
    f3: function void ();
    f4: function void ();
    f: char;
    f4: char;
    x: boolean = true;
    x: char;
}
f4: function void () =
{
    x: boolean = true;
    y: boolean = x1;
}
==5002== 
==5002== HEAP SUMMARY:
==5002==     in use at exit: 24,645 bytes in 68 blocks
==5002==   total heap usage: 78 allocs, 10 frees, 24,695 bytes allocated
==5002== 
==5002== LEAK SUMMARY:
==5002==    definitely lost: 0 bytes in 0 blocks
==5002==    indirectly lost: 0 bytes in 0 blocks
==5002==      possibly lost: 0 bytes in 0 blocks
==5002==    still reachable: 24,645 bytes in 68 blocks
==5002==         suppressed: 0 bytes in 0 blocks
==5002== Reachable blocks (those to which a pointer was found) are not shown.
==5002== To see them, rerun with: --leak-check=full --show-reachable=yes
==5002== 
==5002== For counts of detected and suppressed errors, rerun with: -v
==5002== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5003== Memcheck, a memory error detector
==5003== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5003== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5003== Command: ./cminor -print bad2.cminor
==5003== 
f5: function void ( x: integer ) =
{
    y: integer = 1;
    y: integer = x;
}
x: integer = 1;
x: char = 'c';
==5003== 
==5003== HEAP SUMMARY:
==5003==     in use at exit: 23,117 bytes in 34 blocks
==5003==   total heap usage: 36 allocs, 2 frees, 23,127 bytes allocated
==5003== 
==5003== LEAK SUMMARY:
==5003==    definitely lost: 0 bytes in 0 blocks
==5003==    indirectly lost: 0 bytes in 0 blocks
==5003==      possibly lost: 0 bytes in 0 blocks
==5003==    still reachable: 23,117 bytes in 34 blocks
==5003==         suppressed: 0 bytes in 0 blocks
==5003== Reachable blocks (those to which a pointer was found) are not shown.
==5003== To see them, rerun with: --leak-check=full --show-reachable=yes
==5003== 
==5003== For counts of detected and suppressed errors, rerun with: -v
==5003== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5005== Memcheck, a memory error detector
==5005== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5005== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5005== Command: ./cminor -print bad3.cminor
==5005== 
f3: function void ( x: integer, x: char ) =
{
    x: boolean = true;
    y: boolean = x1;
}
f2: function void ( x: integer ) =
{
    x: integer = 1;
    y: boolean = x;
}
==5005== 
==5005== HEAP SUMMARY:
==5005==     in use at exit: 23,635 bytes in 47 blocks
==5005==   total heap usage: 51 allocs, 4 frees, 23,655 bytes allocated
==5005== 
==5005== LEAK SUMMARY:
==5005==    definitely lost: 0 bytes in 0 blocks
==5005==    indirectly lost: 0 bytes in 0 blocks
==5005==      possibly lost: 0 bytes in 0 blocks
==5005==    still reachable: 23,635 bytes in 47 blocks
==5005==         suppressed: 0 bytes in 0 blocks
==5005== Reachable blocks (those to which a pointer was found) are not shown.
==5005== To see them, rerun with: --leak-check=full --show-reachable=yes
==5005== 
==5005== For counts of detected and suppressed errors, rerun with: -v
==5005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5006== Memcheck, a memory error detector
==5006== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5006== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5006== Command: ./cminor -print bad4.cminor
==5006== 
x: boolean = true;
y: boolean = x;
f: function void () =
{
    a: array [3] integer;
    x: char = a[2];
    y: integer;
    z: array [5] integer = {0,-3+5-8*6,5,y+3,y=8};
}
x1: char = 3;
f1: function void ( x: integer );
f2: function void () =
{
    x: boolean = true;
    y: boolean = x;
}
ff1: function void ( x: integer );
ff1: function void ( y: integer );
ff1: function integer ( y: integer );
ff1: function integer ( x: char, y: integer );
ff2: function void () =
{
    ff1: function void ( x: integer, y: char, z: char );
    ff2: char;
}
ff1: function void ( x: integer );
ff1: function void ( y: integer );
ff3: function void () =
{
    ff1: function void ( x: integer );
    ff3: function void ();
}
==5006== 
==5006== HEAP SUMMARY:
==5006==     in use at exit: 29,031 bytes in 180 blocks
==5006==   total heap usage: 190 allocs, 10 frees, 29,081 bytes allocated
==5006== 
==5006== LEAK SUMMARY:
==5006==    definitely lost: 0 bytes in 0 blocks
==5006==    indirectly lost: 0 bytes in 0 blocks
==5006==      possibly lost: 0 bytes in 0 blocks
==5006==    still reachable: 29,031 bytes in 180 blocks
==5006==         suppressed: 0 bytes in 0 blocks
==5006== Reachable blocks (those to which a pointer was found) are not shown.
==5006== To see them, rerun with: --leak-check=full --show-reachable=yes
==5006== 
==5006== For counts of detected and suppressed errors, rerun with: -v
==5006== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5007== Memcheck, a memory error detector
==5007== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5007== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5007== Command: ./cminor -print bad5.cminor
==5007== 
f3: function void ( x: integer );
f3: function void () =
{
    x: boolean = true;
    y: boolean = x;
}
f4: function void ( a: integer ) =
{
    return 1;
}
f5: function integer ( a: integer ) =
{
    return;
}
f6: function integer ( a: integer ) =
{
}
f7: function void ( a: integer ) =
{
    if(a+34*7)
        print;
}
f8: function void ( a: integer ) =
{
    if(true)
        x: integer = 3;
    else
        print 2;
}
f9: function void () =
{
    x: integer;
    for(x=1;x+1;x++) {
        print 1;
    }
}
f10: function void () =
{
    x: integer;
    for(x=1;!(x==1);x++) {
        print 1;
    }
}
==5007== 
==5007== HEAP SUMMARY:
==5007==     in use at exit: 28,060 bytes in 139 blocks
==5007==   total heap usage: 157 allocs, 18 frees, 28,170 bytes allocated
==5007== 
==5007== LEAK SUMMARY:
==5007==    definitely lost: 0 bytes in 0 blocks
==5007==    indirectly lost: 0 bytes in 0 blocks
==5007==      possibly lost: 0 bytes in 0 blocks
==5007==    still reachable: 28,060 bytes in 139 blocks
==5007==         suppressed: 0 bytes in 0 blocks
==5007== Reachable blocks (those to which a pointer was found) are not shown.
==5007== To see them, rerun with: --leak-check=full --show-reachable=yes
==5007== 
==5007== For counts of detected and suppressed errors, rerun with: -v
==5007== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5008== Memcheck, a memory error detector
==5008== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5008== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5008== Command: ./cminor -print bad6.cminor
==5008== 
f11: function void () =
{
    x: integer = 1;
    x[3]="5";
}
f12: function void () =
{
    x: char = 'c';
    z: integer = 2;
    y: array [5] integer;
    y[x]=5;
}
f13: function void () =
{
    c: char;
    x: integer = c--;
}
f14: function void () =
{
    c: char;
    x: integer = -c;
}
f15: function void () =
{
    c: integer;
    x: integer = -c;
}
f16: function void () =
{
    a: integer;
    b: boolean = !a;
    print f16,f16(),a,b;
}
f17: function void () =
{
    a: integer;
    b: boolean = !b;
}
f18: function void () =
{
    a: integer;
    c: char;
    b: integer = a+5*a/a^a-c;
}
==5008== 
==5008== HEAP SUMMARY:
==5008==     in use at exit: 29,666 bytes in 180 blocks
==5008==   total heap usage: 200 allocs, 20 frees, 29,766 bytes allocated
==5008== 
==5008== LEAK SUMMARY:
==5008==    definitely lost: 0 bytes in 0 blocks
==5008==    indirectly lost: 0 bytes in 0 blocks
==5008==      possibly lost: 0 bytes in 0 blocks
==5008==    still reachable: 29,666 bytes in 180 blocks
==5008==         suppressed: 0 bytes in 0 blocks
==5008== Reachable blocks (those to which a pointer was found) are not shown.
==5008== To see them, rerun with: --leak-check=full --show-reachable=yes
==5008== 
==5008== For counts of detected and suppressed errors, rerun with: -v
==5008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5010== Memcheck, a memory error detector
==5010== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5010== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5010== Command: ./cminor -print bad7.cminor
==5010== 
f19: function void () =
{
    a: char;
    c: char;
    b: integer = a+a*a/a^a-c;
}
f20: function void () =
{
    a: integer;
    c: integer;
    b: integer = a+a*a/a^a-c;
}
f21: function void () =
{
    a: integer;
    c: char;
    b: boolean = a>c;
}
f22: function void () =
{
    a: char;
    c: char;
    b: boolean = a>c;
}
f23: function void () =
{
    a: integer;
    c: integer;
    b: boolean = (a>((c)));
}
f24: function void () =
{
    a: array [2] integer;
    c: array [2] integer;
    d: char;
    b: boolean = (a==((c)));
    a!=d!=d;
    return c==d;
}
a: function integer () =
{
}
c: function integer () =
{
}
f25: function void () =
{
    a: function integer ();
    c: function integer ();
    b: boolean = (a==((c)));
}
f26: function void () =
{
    a: array [] integer;
    c: array [] integer;
    b: boolean = (a!=((c)));
}
f27: function void () =
{
    a: function integer ();
    c: function integer ();
    b: boolean = (a!=((c)));
}
==5010== 
==5010== HEAP SUMMARY:
==5010==     in use at exit: 33,992 bytes in 282 blocks
==5010==   total heap usage: 312 allocs, 30 frees, 34,142 bytes allocated
==5010== 
==5010== LEAK SUMMARY:
==5010==    definitely lost: 0 bytes in 0 blocks
==5010==    indirectly lost: 0 bytes in 0 blocks
==5010==      possibly lost: 0 bytes in 0 blocks
==5010==    still reachable: 33,992 bytes in 282 blocks
==5010==         suppressed: 0 bytes in 0 blocks
==5010== Reachable blocks (those to which a pointer was found) are not shown.
==5010== To see them, rerun with: --leak-check=full --show-reachable=yes
==5010== 
==5010== For counts of detected and suppressed errors, rerun with: -v
==5010== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5011== Memcheck, a memory error detector
==5011== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5011== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5011== Command: ./cminor -print bad8.cminor
==5011== 
f28: function void () =
{
    a: integer;
    b: boolean = a&&true&&false;
}
f29: function void () =
{
    a: integer;
    b: boolean = 1&&a;
}
f30: function void () =
{
    a: boolean;
    b: boolean = a||true||false;
}
f31: function void () =
{
    a: integer;
    b: boolean = a||true||false;
}
f32: function void () =
{
    a: integer;
    b: boolean = 1||a;
}
f33: function void () =
{
    a: array [1] array [2] char;
    b: array [23] array [3+7*6] char;
    c: array [0] array [-343] char = {{'1'},{'2'}};
    b=a=a=c;
}
f34: function void () =
{
    a: array [1] array [2] string;
    b: array [23] array [3+7*6] char;
    c: array [0] array [-343] char = {{'1'},{'2'}};
    b=a=a=c;
}
f35: function void () =
{
}
f36: function void () =
{
}
f37: function void () =
{
    a: char;
    f35=f36;
}
f39: function void () =
{
}
f38: function void ( x: integer, y: char, z: string ) =
{
}
f40: function void () =
{
    a: array [2] array [3] integer = {{1,1},{23}};
    print a,1,"abc",'a',true,false,f39();
    f38(1,'c',"str");
}
a1: array [2] array [3] integer = {{true,1},{23}};
==5011== 
==5011== HEAP SUMMARY:
==5011==     in use at exit: 36,499 bytes in 315 blocks
==5011==   total heap usage: 338 allocs, 23 frees, 36,614 bytes allocated
==5011== 
==5011== LEAK SUMMARY:
==5011==    definitely lost: 0 bytes in 0 blocks
==5011==    indirectly lost: 0 bytes in 0 blocks
==5011==      possibly lost: 0 bytes in 0 blocks
==5011==    still reachable: 36,499 bytes in 315 blocks
==5011==         suppressed: 0 bytes in 0 blocks
==5011== Reachable blocks (those to which a pointer was found) are not shown.
==5011== To see them, rerun with: --leak-check=full --show-reachable=yes
==5011== 
==5011== For counts of detected and suppressed errors, rerun with: -v
==5011== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5012== Memcheck, a memory error detector
==5012== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5012== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5012== Command: ./cminor -print bad9.cminor
==5012== 
a2: array [3] integer = {1,23,'c'};
a3: array [3] array [3] integer = {{1},{'2','3'}};
f41: function void () =
{
    a: array [2] array [3] integer = {{1,1,1},{1,2,23}};
    b: array [2] array [3] integer = a;
    a1: integer = -(-(--1));
    b1: char = '\n';
    c: string = "d\0\df";
    d: boolean = true;
    e: boolean = false;
    f: boolean = d&&e||!f;
}
f42: function void ( a: integer, b: char, c: string ) =
{
}
main: function integer () =
{
    a: integer = 1;
    b: char = 'c';
    f42(a,b);
    return 0;
}
f43: function void ( a: integer, b: char, c: string ) =
{
}
main1: function integer () =
{
    a: integer = 1;
    b: char = 'c';
    f43(a+3,a^2-5+7/9,b);
    return 0;
}
f44: function void ( a: integer, b: char, c: string ) =
{
}
main2: function integer () =
{
    a: integer = 1;
    b: char = 'c';
    f44(a,b,"abc",1,23);
    return 0;
}
==5012== 
==5012== HEAP SUMMARY:
==5012==     in use at exit: 33,639 bytes in 260 blocks
==5012==   total heap usage: 280 allocs, 20 frees, 33,739 bytes allocated
==5012== 
==5012== LEAK SUMMARY:
==5012==    definitely lost: 0 bytes in 0 blocks
==5012==    indirectly lost: 0 bytes in 0 blocks
==5012==      possibly lost: 0 bytes in 0 blocks
==5012==    still reachable: 33,639 bytes in 260 blocks
==5012==         suppressed: 0 bytes in 0 blocks
==5012== Reachable blocks (those to which a pointer was found) are not shown.
==5012== To see them, rerun with: --leak-check=full --show-reachable=yes
==5012== 
==5012== For counts of detected and suppressed errors, rerun with: -v
==5012== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
==5017== Memcheck, a memory error detector
==5017== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==5017== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==5017== Command: ./cminor -print bad10.cminor
==5017== 
xx: integer = 3;
aa: array [3] array [5+xx] integer = {{1},{2,3}};
f45: function void ( a: array [] integer ) =
{
    x: integer = 3;
    a1: array [3] array [5+x] integer = {{1},{2,3}};
}
aa2: array [2] array [3] integer = {{1},{2,3}};
aa3: array [2] array [3] integer = {{1,2,3,4},{2,3,3},{1,2,3}};
aa4: array [2] array [3] integer = {{1,2,4},{2,3,3}};
aa5: array [] array [] integer = {{1},{2,3}};
f46: function void () =
{
    a: array [] integer;
}
f47: function void ( a: array [] integer ) =
{
    x: char;
    a1: array [3] array [x] integer = {{1},{2,3}};
}
d: integer;
f48: function void ( a: integer ) =
{
    x: integer = ((d^2)+(-d)*5);
}
f49: function void ( a: integer ) =
{
}
main4: function integer () =
{
    a: integer = 1;
    b: array [2] char = {'a','c'};
    f49(a);
    return 0;
}
aaa: function integer () =
{
}
caa: function integer () =
{
}
f50: function void () =
{
    aaa: function integer ();
    caa: function integer ();
    b: boolean = (aaa()!=((caa())));
}
f51: function void () =
{
    x: boolean = true;
    y: boolean = x;
}
fff: function void ();
fff: function void () =
{
    fff: function void ();
    x: boolean = true;
    y: boolean = x;
    fff();
}
fff: function void ();
x52: integer = 1;
f52: function void ( x: integer ) =
{
    y: integer = 1;
    xy: integer = x52;
    if(x52==1) {
        x: integer = 1;
    } 
    {
        x52: integer;
    }
}
f53: function void () =
{
    a: boolean;
    b: boolean = a&&true&&false;
}
b12: array [2] integer = {1,true};
==5017== 
==5017== HEAP SUMMARY:
==5017==     in use at exit: 40,892 bytes in 401 blocks
==5017==   total heap usage: 430 allocs, 29 frees, 41,045 bytes allocated
==5017== 
==5017== LEAK SUMMARY:
==5017==    definitely lost: 0 bytes in 0 blocks
==5017==    indirectly lost: 0 bytes in 0 blocks
==5017==      possibly lost: 0 bytes in 0 blocks
==5017==    still reachable: 40,892 bytes in 401 blocks
==5017==         suppressed: 0 bytes in 0 blocks
==5017== Reachable blocks (those to which a pointer was found) are not shown.
==5017== To see them, rerun with: --leak-check=full --show-reachable=yes
==5017== 
==5017== For counts of detected and suppressed errors, rerun with: -v
==5017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
exit code:  0
